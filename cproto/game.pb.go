// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: game.proto

package cproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GameReq struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Serverid string                 `protobuf:"bytes,1,opt,name=serverid,proto3" json:"serverid,omitempty"`
	Gameid   int32                  `protobuf:"varint,2,opt,name=gameid,proto3" json:"gameid,omitempty"`   // 游戏ID
	Matchid  int32                  `protobuf:"varint,3,opt,name=matchid,proto3" json:"matchid,omitempty"` // 比赛ID
	Tableid  int32                  `protobuf:"varint,4,opt,name=tableid,proto3" json:"tableid,omitempty"` // 桌号
	// Types that are valid to be assigned to Req:
	//
	//	*GameReq_EnterGameReq
	//	*GameReq_TableMsgReq
	Req           isGameReq_Req `protobuf_oneof:"req"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameReq) Reset() {
	*x = GameReq{}
	mi := &file_game_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameReq) ProtoMessage() {}

func (x *GameReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameReq.ProtoReflect.Descriptor instead.
func (*GameReq) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{0}
}

func (x *GameReq) GetServerid() string {
	if x != nil {
		return x.Serverid
	}
	return ""
}

func (x *GameReq) GetGameid() int32 {
	if x != nil {
		return x.Gameid
	}
	return 0
}

func (x *GameReq) GetMatchid() int32 {
	if x != nil {
		return x.Matchid
	}
	return 0
}

func (x *GameReq) GetTableid() int32 {
	if x != nil {
		return x.Tableid
	}
	return 0
}

func (x *GameReq) GetReq() isGameReq_Req {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *GameReq) GetEnterGameReq() *EnterGameReq {
	if x != nil {
		if x, ok := x.Req.(*GameReq_EnterGameReq); ok {
			return x.EnterGameReq
		}
	}
	return nil
}

func (x *GameReq) GetTableMsgReq() *TableMsgReq {
	if x != nil {
		if x, ok := x.Req.(*GameReq_TableMsgReq); ok {
			return x.TableMsgReq
		}
	}
	return nil
}

type isGameReq_Req interface {
	isGameReq_Req()
}

type GameReq_EnterGameReq struct {
	EnterGameReq *EnterGameReq `protobuf:"bytes,5,opt,name=enter_game_req,json=enterGameReq,proto3,oneof"`
}

type GameReq_TableMsgReq struct {
	TableMsgReq *TableMsgReq `protobuf:"bytes,6,opt,name=table_msg_req,json=tableMsgReq,proto3,oneof"`
}

func (*GameReq_EnterGameReq) isGameReq_Req() {}

func (*GameReq_TableMsgReq) isGameReq_Req() {}

type GameAck struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Serverid string                 `protobuf:"bytes,1,opt,name=serverid,proto3" json:"serverid,omitempty"`
	Gameid   int32                  `protobuf:"varint,2,opt,name=gameid,proto3" json:"gameid,omitempty"`   // 游戏ID
	Matchid  int32                  `protobuf:"varint,3,opt,name=matchid,proto3" json:"matchid,omitempty"` // 比赛ID
	Tableid  int32                  `protobuf:"varint,4,opt,name=tableid,proto3" json:"tableid,omitempty"` // 桌号
	// Types that are valid to be assigned to Ack:
	//
	//	*GameAck_EnterGameAck
	//	*GameAck_TablePlayerAck
	//	*GameAck_TableMsgAck
	//	*GameAck_TableEndAck
	Ack           isGameAck_Ack `protobuf_oneof:"ack"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameAck) Reset() {
	*x = GameAck{}
	mi := &file_game_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameAck) ProtoMessage() {}

func (x *GameAck) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameAck.ProtoReflect.Descriptor instead.
func (*GameAck) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{1}
}

func (x *GameAck) GetServerid() string {
	if x != nil {
		return x.Serverid
	}
	return ""
}

func (x *GameAck) GetGameid() int32 {
	if x != nil {
		return x.Gameid
	}
	return 0
}

func (x *GameAck) GetMatchid() int32 {
	if x != nil {
		return x.Matchid
	}
	return 0
}

func (x *GameAck) GetTableid() int32 {
	if x != nil {
		return x.Tableid
	}
	return 0
}

func (x *GameAck) GetAck() isGameAck_Ack {
	if x != nil {
		return x.Ack
	}
	return nil
}

func (x *GameAck) GetEnterGameAck() *EnterGameAck {
	if x != nil {
		if x, ok := x.Ack.(*GameAck_EnterGameAck); ok {
			return x.EnterGameAck
		}
	}
	return nil
}

func (x *GameAck) GetTablePlayerAck() *TablePlayerAck {
	if x != nil {
		if x, ok := x.Ack.(*GameAck_TablePlayerAck); ok {
			return x.TablePlayerAck
		}
	}
	return nil
}

func (x *GameAck) GetTableMsgAck() *TableMsgAck {
	if x != nil {
		if x, ok := x.Ack.(*GameAck_TableMsgAck); ok {
			return x.TableMsgAck
		}
	}
	return nil
}

func (x *GameAck) GetTableEndAck() *TableEndAck {
	if x != nil {
		if x, ok := x.Ack.(*GameAck_TableEndAck); ok {
			return x.TableEndAck
		}
	}
	return nil
}

type isGameAck_Ack interface {
	isGameAck_Ack()
}

type GameAck_EnterGameAck struct {
	EnterGameAck *EnterGameAck `protobuf:"bytes,5,opt,name=enter_game_ack,json=enterGameAck,proto3,oneof"`
}

type GameAck_TablePlayerAck struct {
	TablePlayerAck *TablePlayerAck `protobuf:"bytes,6,opt,name=table_player_ack,json=tablePlayerAck,proto3,oneof"`
}

type GameAck_TableMsgAck struct {
	TableMsgAck *TableMsgAck `protobuf:"bytes,7,opt,name=table_msg_ack,json=tableMsgAck,proto3,oneof"`
}

type GameAck_TableEndAck struct {
	TableEndAck *TableEndAck `protobuf:"bytes,8,opt,name=table_end_ack,json=tableEndAck,proto3,oneof"`
}

func (*GameAck_EnterGameAck) isGameAck_Ack() {}

func (*GameAck_TablePlayerAck) isGameAck_Ack() {}

func (*GameAck_TableMsgAck) isGameAck_Ack() {}

func (*GameAck_TableEndAck) isGameAck_Ack() {}

type EnterGameReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnterGameReq) Reset() {
	*x = EnterGameReq{}
	mi := &file_game_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnterGameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterGameReq) ProtoMessage() {}

func (x *EnterGameReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterGameReq.ProtoReflect.Descriptor instead.
func (*EnterGameReq) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{2}
}

type TableMsgReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Msg           []byte                 `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"` // 消息内容
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TableMsgReq) Reset() {
	*x = TableMsgReq{}
	mi := &file_game_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableMsgReq) ProtoMessage() {}

func (x *TableMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableMsgReq.ProtoReflect.Descriptor instead.
func (*TableMsgReq) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{3}
}

func (x *TableMsgReq) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

type EnterGameAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ErrorCode     int32                  `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"` // 0: 成功, 1: 桌号不存在, 2: 玩家已在桌上
	TableInfo     []byte                 `protobuf:"bytes,2,opt,name=table_info,json=tableInfo,proto3" json:"table_info,omitempty"`  // 桌子信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnterGameAck) Reset() {
	*x = EnterGameAck{}
	mi := &file_game_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnterGameAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterGameAck) ProtoMessage() {}

func (x *EnterGameAck) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterGameAck.ProtoReflect.Descriptor instead.
func (*EnterGameAck) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{4}
}

func (x *EnterGameAck) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *EnterGameAck) GetTableInfo() []byte {
	if x != nil {
		return x.TableInfo
	}
	return nil
}

type TablePlayerAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Playerid      string                 `protobuf:"bytes,1,opt,name=playerid,proto3" json:"playerid,omitempty"` // 玩家ID
	Seatnum       int32                  `protobuf:"varint,2,opt,name=seatnum,proto3" json:"seatnum,omitempty"`  // 座位号
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TablePlayerAck) Reset() {
	*x = TablePlayerAck{}
	mi := &file_game_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TablePlayerAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TablePlayerAck) ProtoMessage() {}

func (x *TablePlayerAck) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TablePlayerAck.ProtoReflect.Descriptor instead.
func (*TablePlayerAck) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{5}
}

func (x *TablePlayerAck) GetPlayerid() string {
	if x != nil {
		return x.Playerid
	}
	return ""
}

func (x *TablePlayerAck) GetSeatnum() int32 {
	if x != nil {
		return x.Seatnum
	}
	return 0
}

type TableMsgAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Msg           []byte                 `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"` // 消息内容
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TableMsgAck) Reset() {
	*x = TableMsgAck{}
	mi := &file_game_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableMsgAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableMsgAck) ProtoMessage() {}

func (x *TableMsgAck) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableMsgAck.ProtoReflect.Descriptor instead.
func (*TableMsgAck) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{6}
}

func (x *TableMsgAck) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

type TableEndAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TableEndAck) Reset() {
	*x = TableEndAck{}
	mi := &file_game_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableEndAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableEndAck) ProtoMessage() {}

func (x *TableEndAck) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableEndAck.ProtoReflect.Descriptor instead.
func (*TableEndAck) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{7}
}

var File_game_proto protoreflect.FileDescriptor

const file_game_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"game.proto\x12\x06cproto\"\xf1\x01\n" +
	"\aGameReq\x12\x1a\n" +
	"\bserverid\x18\x01 \x01(\tR\bserverid\x12\x16\n" +
	"\x06gameid\x18\x02 \x01(\x05R\x06gameid\x12\x18\n" +
	"\amatchid\x18\x03 \x01(\x05R\amatchid\x12\x18\n" +
	"\atableid\x18\x04 \x01(\x05R\atableid\x12<\n" +
	"\x0eenter_game_req\x18\x05 \x01(\v2\x14.cproto.EnterGameReqH\x00R\fenterGameReq\x129\n" +
	"\rtable_msg_req\x18\x06 \x01(\v2\x13.cproto.TableMsgReqH\x00R\vtableMsgReqB\x05\n" +
	"\x03req\"\xf0\x02\n" +
	"\aGameAck\x12\x1a\n" +
	"\bserverid\x18\x01 \x01(\tR\bserverid\x12\x16\n" +
	"\x06gameid\x18\x02 \x01(\x05R\x06gameid\x12\x18\n" +
	"\amatchid\x18\x03 \x01(\x05R\amatchid\x12\x18\n" +
	"\atableid\x18\x04 \x01(\x05R\atableid\x12<\n" +
	"\x0eenter_game_ack\x18\x05 \x01(\v2\x14.cproto.EnterGameAckH\x00R\fenterGameAck\x12B\n" +
	"\x10table_player_ack\x18\x06 \x01(\v2\x16.cproto.TablePlayerAckH\x00R\x0etablePlayerAck\x129\n" +
	"\rtable_msg_ack\x18\a \x01(\v2\x13.cproto.TableMsgAckH\x00R\vtableMsgAck\x129\n" +
	"\rtable_end_ack\x18\b \x01(\v2\x13.cproto.TableEndAckH\x00R\vtableEndAckB\x05\n" +
	"\x03ack\"\x0e\n" +
	"\fEnterGameReq\"\x1f\n" +
	"\vTableMsgReq\x12\x10\n" +
	"\x03msg\x18\x01 \x01(\fR\x03msg\"L\n" +
	"\fEnterGameAck\x12\x1d\n" +
	"\n" +
	"error_code\x18\x01 \x01(\x05R\terrorCode\x12\x1d\n" +
	"\n" +
	"table_info\x18\x02 \x01(\fR\ttableInfo\"F\n" +
	"\x0eTablePlayerAck\x12\x1a\n" +
	"\bplayerid\x18\x01 \x01(\tR\bplayerid\x12\x18\n" +
	"\aseatnum\x18\x02 \x01(\x05R\aseatnum\"\x1f\n" +
	"\vTableMsgAck\x12\x10\n" +
	"\x03msg\x18\x01 \x01(\fR\x03msg\"\r\n" +
	"\vTableEndAckB\vZ\t../cprotob\x06proto3"

var (
	file_game_proto_rawDescOnce sync.Once
	file_game_proto_rawDescData []byte
)

func file_game_proto_rawDescGZIP() []byte {
	file_game_proto_rawDescOnce.Do(func() {
		file_game_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_game_proto_rawDesc), len(file_game_proto_rawDesc)))
	})
	return file_game_proto_rawDescData
}

var file_game_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_game_proto_goTypes = []any{
	(*GameReq)(nil),        // 0: cproto.GameReq
	(*GameAck)(nil),        // 1: cproto.GameAck
	(*EnterGameReq)(nil),   // 2: cproto.EnterGameReq
	(*TableMsgReq)(nil),    // 3: cproto.TableMsgReq
	(*EnterGameAck)(nil),   // 4: cproto.EnterGameAck
	(*TablePlayerAck)(nil), // 5: cproto.TablePlayerAck
	(*TableMsgAck)(nil),    // 6: cproto.TableMsgAck
	(*TableEndAck)(nil),    // 7: cproto.TableEndAck
}
var file_game_proto_depIdxs = []int32{
	2, // 0: cproto.GameReq.enter_game_req:type_name -> cproto.EnterGameReq
	3, // 1: cproto.GameReq.table_msg_req:type_name -> cproto.TableMsgReq
	4, // 2: cproto.GameAck.enter_game_ack:type_name -> cproto.EnterGameAck
	5, // 3: cproto.GameAck.table_player_ack:type_name -> cproto.TablePlayerAck
	6, // 4: cproto.GameAck.table_msg_ack:type_name -> cproto.TableMsgAck
	7, // 5: cproto.GameAck.table_end_ack:type_name -> cproto.TableEndAck
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_game_proto_init() }
func file_game_proto_init() {
	if File_game_proto != nil {
		return
	}
	file_game_proto_msgTypes[0].OneofWrappers = []any{
		(*GameReq_EnterGameReq)(nil),
		(*GameReq_TableMsgReq)(nil),
	}
	file_game_proto_msgTypes[1].OneofWrappers = []any{
		(*GameAck_EnterGameAck)(nil),
		(*GameAck_TablePlayerAck)(nil),
		(*GameAck_TableMsgAck)(nil),
		(*GameAck_TableEndAck)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_game_proto_rawDesc), len(file_game_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_game_proto_goTypes,
		DependencyIndexes: file_game_proto_depIdxs,
		MessageInfos:      file_game_proto_msgTypes,
	}.Build()
	File_game_proto = out.File
	file_game_proto_goTypes = nil
	file_game_proto_depIdxs = nil
}
