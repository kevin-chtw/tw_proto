// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.21.12
// source: match.proto

package cproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MatchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Serverid string `protobuf:"bytes,1,opt,name=serverid,proto3" json:"serverid,omitempty"`
	// Types that are assignable to Req:
	//
	//	*MatchReq_SignupReq
	//	*MatchReq_SignoutReq
	//	*MatchReq_EnterMatchReq
	//	*MatchReq_MatchStatusReq
	//	*MatchReq_RoomCardCreateReq
	//	*MatchReq_RoomCardJoinReq
	Req isMatchReq_Req `protobuf_oneof:"req"`
}

func (x *MatchReq) Reset() {
	*x = MatchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchReq) ProtoMessage() {}

func (x *MatchReq) ProtoReflect() protoreflect.Message {
	mi := &file_match_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchReq.ProtoReflect.Descriptor instead.
func (*MatchReq) Descriptor() ([]byte, []int) {
	return file_match_proto_rawDescGZIP(), []int{0}
}

func (x *MatchReq) GetServerid() string {
	if x != nil {
		return x.Serverid
	}
	return ""
}

func (m *MatchReq) GetReq() isMatchReq_Req {
	if m != nil {
		return m.Req
	}
	return nil
}

func (x *MatchReq) GetSignupReq() *SignupReq {
	if x, ok := x.GetReq().(*MatchReq_SignupReq); ok {
		return x.SignupReq
	}
	return nil
}

func (x *MatchReq) GetSignoutReq() *SignoutReq {
	if x, ok := x.GetReq().(*MatchReq_SignoutReq); ok {
		return x.SignoutReq
	}
	return nil
}

func (x *MatchReq) GetEnterMatchReq() *EnterMatchReq {
	if x, ok := x.GetReq().(*MatchReq_EnterMatchReq); ok {
		return x.EnterMatchReq
	}
	return nil
}

func (x *MatchReq) GetMatchStatusReq() *MatchStatusReq {
	if x, ok := x.GetReq().(*MatchReq_MatchStatusReq); ok {
		return x.MatchStatusReq
	}
	return nil
}

func (x *MatchReq) GetRoomCardCreateReq() *RoomCardCreateReq {
	if x, ok := x.GetReq().(*MatchReq_RoomCardCreateReq); ok {
		return x.RoomCardCreateReq
	}
	return nil
}

func (x *MatchReq) GetRoomCardJoinReq() *RoomCardJoinReq {
	if x, ok := x.GetReq().(*MatchReq_RoomCardJoinReq); ok {
		return x.RoomCardJoinReq
	}
	return nil
}

type isMatchReq_Req interface {
	isMatchReq_Req()
}

type MatchReq_SignupReq struct {
	SignupReq *SignupReq `protobuf:"bytes,2,opt,name=signup_req,json=signupReq,proto3,oneof"`
}

type MatchReq_SignoutReq struct {
	SignoutReq *SignoutReq `protobuf:"bytes,3,opt,name=signout_req,json=signoutReq,proto3,oneof"`
}

type MatchReq_EnterMatchReq struct {
	EnterMatchReq *EnterMatchReq `protobuf:"bytes,4,opt,name=enter_match_req,json=enterMatchReq,proto3,oneof"`
}

type MatchReq_MatchStatusReq struct {
	MatchStatusReq *MatchStatusReq `protobuf:"bytes,5,opt,name=match_status_req,json=matchStatusReq,proto3,oneof"`
}

type MatchReq_RoomCardCreateReq struct {
	RoomCardCreateReq *RoomCardCreateReq `protobuf:"bytes,6,opt,name=room_card_create_req,json=roomCardCreateReq,proto3,oneof"`
}

type MatchReq_RoomCardJoinReq struct {
	RoomCardJoinReq *RoomCardJoinReq `protobuf:"bytes,7,opt,name=room_card_join_req,json=roomCardJoinReq,proto3,oneof"`
}

func (*MatchReq_SignupReq) isMatchReq_Req() {}

func (*MatchReq_SignoutReq) isMatchReq_Req() {}

func (*MatchReq_EnterMatchReq) isMatchReq_Req() {}

func (*MatchReq_MatchStatusReq) isMatchReq_Req() {}

func (*MatchReq_RoomCardCreateReq) isMatchReq_Req() {}

func (*MatchReq_RoomCardJoinReq) isMatchReq_Req() {}

type SignupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Matchid string `protobuf:"bytes,1,opt,name=matchid,proto3" json:"matchid,omitempty"`
}

func (x *SignupReq) Reset() {
	*x = SignupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignupReq) ProtoMessage() {}

func (x *SignupReq) ProtoReflect() protoreflect.Message {
	mi := &file_match_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignupReq.ProtoReflect.Descriptor instead.
func (*SignupReq) Descriptor() ([]byte, []int) {
	return file_match_proto_rawDescGZIP(), []int{1}
}

func (x *SignupReq) GetMatchid() string {
	if x != nil {
		return x.Matchid
	}
	return ""
}

type SignoutReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Matchid string `protobuf:"bytes,1,opt,name=matchid,proto3" json:"matchid,omitempty"`
}

func (x *SignoutReq) Reset() {
	*x = SignoutReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignoutReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignoutReq) ProtoMessage() {}

func (x *SignoutReq) ProtoReflect() protoreflect.Message {
	mi := &file_match_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignoutReq.ProtoReflect.Descriptor instead.
func (*SignoutReq) Descriptor() ([]byte, []int) {
	return file_match_proto_rawDescGZIP(), []int{2}
}

func (x *SignoutReq) GetMatchid() string {
	if x != nil {
		return x.Matchid
	}
	return ""
}

type EnterMatchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Matchid string `protobuf:"bytes,1,opt,name=matchid,proto3" json:"matchid,omitempty"`
	Tableid string `protobuf:"bytes,2,opt,name=tableid,proto3" json:"tableid,omitempty"`
}

func (x *EnterMatchReq) Reset() {
	*x = EnterMatchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterMatchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterMatchReq) ProtoMessage() {}

func (x *EnterMatchReq) ProtoReflect() protoreflect.Message {
	mi := &file_match_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterMatchReq.ProtoReflect.Descriptor instead.
func (*EnterMatchReq) Descriptor() ([]byte, []int) {
	return file_match_proto_rawDescGZIP(), []int{3}
}

func (x *EnterMatchReq) GetMatchid() string {
	if x != nil {
		return x.Matchid
	}
	return ""
}

func (x *EnterMatchReq) GetTableid() string {
	if x != nil {
		return x.Tableid
	}
	return ""
}

type MatchStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Matchid string `protobuf:"bytes,1,opt,name=matchid,proto3" json:"matchid,omitempty"`
}

func (x *MatchStatusReq) Reset() {
	*x = MatchStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchStatusReq) ProtoMessage() {}

func (x *MatchStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_match_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchStatusReq.ProtoReflect.Descriptor instead.
func (*MatchStatusReq) Descriptor() ([]byte, []int) {
	return file_match_proto_rawDescGZIP(), []int{4}
}

func (x *MatchStatusReq) GetMatchid() string {
	if x != nil {
		return x.Matchid
	}
	return ""
}

type MatchAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Serverid string `protobuf:"bytes,1,opt,name=serverid,proto3" json:"serverid,omitempty"`
	// Types that are assignable to Ack:
	//
	//	*MatchAck_SignupAck
	//	*MatchAck_StartClientAck
	//	*MatchAck_EnterMatchAck
	//	*MatchAck_AddPlayerAck
	//	*MatchAck_GameBeginAck
	//	*MatchAck_GameEndAck
	//	*MatchAck_CancelAck
	//	*MatchAck_StatusAck
	//	*MatchAck_RoomCardCreateAck
	//	*MatchAck_RoomCardJoinAck
	Ack isMatchAck_Ack `protobuf_oneof:"ack"`
}

func (x *MatchAck) Reset() {
	*x = MatchAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchAck) ProtoMessage() {}

func (x *MatchAck) ProtoReflect() protoreflect.Message {
	mi := &file_match_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchAck.ProtoReflect.Descriptor instead.
func (*MatchAck) Descriptor() ([]byte, []int) {
	return file_match_proto_rawDescGZIP(), []int{5}
}

func (x *MatchAck) GetServerid() string {
	if x != nil {
		return x.Serverid
	}
	return ""
}

func (m *MatchAck) GetAck() isMatchAck_Ack {
	if m != nil {
		return m.Ack
	}
	return nil
}

func (x *MatchAck) GetSignupAck() *SignupAck {
	if x, ok := x.GetAck().(*MatchAck_SignupAck); ok {
		return x.SignupAck
	}
	return nil
}

func (x *MatchAck) GetStartClientAck() *StartClientAck {
	if x, ok := x.GetAck().(*MatchAck_StartClientAck); ok {
		return x.StartClientAck
	}
	return nil
}

func (x *MatchAck) GetEnterMatchAck() *EnterMatchAck {
	if x, ok := x.GetAck().(*MatchAck_EnterMatchAck); ok {
		return x.EnterMatchAck
	}
	return nil
}

func (x *MatchAck) GetAddPlayerAck() *AddPlayerAck {
	if x, ok := x.GetAck().(*MatchAck_AddPlayerAck); ok {
		return x.AddPlayerAck
	}
	return nil
}

func (x *MatchAck) GetGameBeginAck() *GameBeginAck {
	if x, ok := x.GetAck().(*MatchAck_GameBeginAck); ok {
		return x.GameBeginAck
	}
	return nil
}

func (x *MatchAck) GetGameEndAck() *GameEndAck {
	if x, ok := x.GetAck().(*MatchAck_GameEndAck); ok {
		return x.GameEndAck
	}
	return nil
}

func (x *MatchAck) GetCancelAck() *MatchCancelAck {
	if x, ok := x.GetAck().(*MatchAck_CancelAck); ok {
		return x.CancelAck
	}
	return nil
}

func (x *MatchAck) GetStatusAck() *MatchStatusAck {
	if x, ok := x.GetAck().(*MatchAck_StatusAck); ok {
		return x.StatusAck
	}
	return nil
}

func (x *MatchAck) GetRoomCardCreateAck() *RoomCardCreateAck {
	if x, ok := x.GetAck().(*MatchAck_RoomCardCreateAck); ok {
		return x.RoomCardCreateAck
	}
	return nil
}

func (x *MatchAck) GetRoomCardJoinAck() *RoomCardJoinAck {
	if x, ok := x.GetAck().(*MatchAck_RoomCardJoinAck); ok {
		return x.RoomCardJoinAck
	}
	return nil
}

type isMatchAck_Ack interface {
	isMatchAck_Ack()
}

type MatchAck_SignupAck struct {
	SignupAck *SignupAck `protobuf:"bytes,2,opt,name=signup_ack,json=signupAck,proto3,oneof"`
}

type MatchAck_StartClientAck struct {
	StartClientAck *StartClientAck `protobuf:"bytes,3,opt,name=start_client_ack,json=startClientAck,proto3,oneof"`
}

type MatchAck_EnterMatchAck struct {
	EnterMatchAck *EnterMatchAck `protobuf:"bytes,4,opt,name=enter_match_ack,json=enterMatchAck,proto3,oneof"`
}

type MatchAck_AddPlayerAck struct {
	AddPlayerAck *AddPlayerAck `protobuf:"bytes,5,opt,name=add_player_ack,json=addPlayerAck,proto3,oneof"`
}

type MatchAck_GameBeginAck struct {
	GameBeginAck *GameBeginAck `protobuf:"bytes,6,opt,name=game_begin_ack,json=gameBeginAck,proto3,oneof"`
}

type MatchAck_GameEndAck struct {
	GameEndAck *GameEndAck `protobuf:"bytes,7,opt,name=game_end_ack,json=gameEndAck,proto3,oneof"`
}

type MatchAck_CancelAck struct {
	CancelAck *MatchCancelAck `protobuf:"bytes,8,opt,name=cancel_ack,json=cancelAck,proto3,oneof"`
}

type MatchAck_StatusAck struct {
	StatusAck *MatchStatusAck `protobuf:"bytes,9,opt,name=status_ack,json=statusAck,proto3,oneof"`
}

type MatchAck_RoomCardCreateAck struct {
	RoomCardCreateAck *RoomCardCreateAck `protobuf:"bytes,10,opt,name=room_card_create_ack,json=roomCardCreateAck,proto3,oneof"`
}

type MatchAck_RoomCardJoinAck struct {
	RoomCardJoinAck *RoomCardJoinAck `protobuf:"bytes,11,opt,name=room_card_join_ack,json=roomCardJoinAck,proto3,oneof"`
}

func (*MatchAck_SignupAck) isMatchAck_Ack() {}

func (*MatchAck_StartClientAck) isMatchAck_Ack() {}

func (*MatchAck_EnterMatchAck) isMatchAck_Ack() {}

func (*MatchAck_AddPlayerAck) isMatchAck_Ack() {}

func (*MatchAck_GameBeginAck) isMatchAck_Ack() {}

func (*MatchAck_GameEndAck) isMatchAck_Ack() {}

func (*MatchAck_CancelAck) isMatchAck_Ack() {}

func (*MatchAck_StatusAck) isMatchAck_Ack() {}

func (*MatchAck_RoomCardCreateAck) isMatchAck_Ack() {}

func (*MatchAck_RoomCardJoinAck) isMatchAck_Ack() {}

type SignupAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Matchid   string `protobuf:"bytes,1,opt,name=matchid,proto3" json:"matchid,omitempty"`
	ErrorCode int32  `protobuf:"varint,2,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"` // 0: success, 1: match not found, 2: player already signed up
}

func (x *SignupAck) Reset() {
	*x = SignupAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignupAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignupAck) ProtoMessage() {}

func (x *SignupAck) ProtoReflect() protoreflect.Message {
	mi := &file_match_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignupAck.ProtoReflect.Descriptor instead.
func (*SignupAck) Descriptor() ([]byte, []int) {
	return file_match_proto_rawDescGZIP(), []int{6}
}

func (x *SignupAck) GetMatchid() string {
	if x != nil {
		return x.Matchid
	}
	return ""
}

func (x *SignupAck) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

type StartClientAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Matchid string   `protobuf:"bytes,1,opt,name=matchid,proto3" json:"matchid,omitempty"`
	Tableid string   `protobuf:"bytes,2,opt,name=tableid,proto3" json:"tableid,omitempty"`
	Players []string `protobuf:"bytes,3,rep,name=players,proto3" json:"players,omitempty"`
}

func (x *StartClientAck) Reset() {
	*x = StartClientAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartClientAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartClientAck) ProtoMessage() {}

func (x *StartClientAck) ProtoReflect() protoreflect.Message {
	mi := &file_match_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartClientAck.ProtoReflect.Descriptor instead.
func (*StartClientAck) Descriptor() ([]byte, []int) {
	return file_match_proto_rawDescGZIP(), []int{7}
}

func (x *StartClientAck) GetMatchid() string {
	if x != nil {
		return x.Matchid
	}
	return ""
}

func (x *StartClientAck) GetTableid() string {
	if x != nil {
		return x.Tableid
	}
	return ""
}

func (x *StartClientAck) GetPlayers() []string {
	if x != nil {
		return x.Players
	}
	return nil
}

type EnterMatchAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Matchid string   `protobuf:"bytes,1,opt,name=matchid,proto3" json:"matchid,omitempty"`
	Tableid string   `protobuf:"bytes,2,opt,name=tableid,proto3" json:"tableid,omitempty"`
	Players []string `protobuf:"bytes,3,rep,name=players,proto3" json:"players,omitempty"`
}

func (x *EnterMatchAck) Reset() {
	*x = EnterMatchAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterMatchAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterMatchAck) ProtoMessage() {}

func (x *EnterMatchAck) ProtoReflect() protoreflect.Message {
	mi := &file_match_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterMatchAck.ProtoReflect.Descriptor instead.
func (*EnterMatchAck) Descriptor() ([]byte, []int) {
	return file_match_proto_rawDescGZIP(), []int{8}
}

func (x *EnterMatchAck) GetMatchid() string {
	if x != nil {
		return x.Matchid
	}
	return ""
}

func (x *EnterMatchAck) GetTableid() string {
	if x != nil {
		return x.Tableid
	}
	return ""
}

func (x *EnterMatchAck) GetPlayers() []string {
	if x != nil {
		return x.Players
	}
	return nil
}

type AddPlayerAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Matchid   string `protobuf:"bytes,2,opt,name=matchid,proto3" json:"matchid,omitempty"`
	ErrorCode int32  `protobuf:"varint,3,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"` // 0: success, 1: match not found, 2: player not signed up
}

func (x *AddPlayerAck) Reset() {
	*x = AddPlayerAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPlayerAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPlayerAck) ProtoMessage() {}

func (x *AddPlayerAck) ProtoReflect() protoreflect.Message {
	mi := &file_match_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPlayerAck.ProtoReflect.Descriptor instead.
func (*AddPlayerAck) Descriptor() ([]byte, []int) {
	return file_match_proto_rawDescGZIP(), []int{9}
}

func (x *AddPlayerAck) GetMatchid() string {
	if x != nil {
		return x.Matchid
	}
	return ""
}

func (x *AddPlayerAck) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

type GameBeginAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Serverid string `protobuf:"bytes,1,opt,name=serverid,proto3" json:"serverid,omitempty"`
	Matchid  string `protobuf:"bytes,2,opt,name=matchid,proto3" json:"matchid,omitempty"`
	Tableid  string `protobuf:"bytes,3,opt,name=tableid,proto3" json:"tableid,omitempty"`
}

func (x *GameBeginAck) Reset() {
	*x = GameBeginAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameBeginAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameBeginAck) ProtoMessage() {}

func (x *GameBeginAck) ProtoReflect() protoreflect.Message {
	mi := &file_match_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameBeginAck.ProtoReflect.Descriptor instead.
func (*GameBeginAck) Descriptor() ([]byte, []int) {
	return file_match_proto_rawDescGZIP(), []int{10}
}

func (x *GameBeginAck) GetServerid() string {
	if x != nil {
		return x.Serverid
	}
	return ""
}

func (x *GameBeginAck) GetMatchid() string {
	if x != nil {
		return x.Matchid
	}
	return ""
}

func (x *GameBeginAck) GetTableid() string {
	if x != nil {
		return x.Tableid
	}
	return ""
}

type GameEndAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Matchid   string   `protobuf:"bytes,1,opt,name=matchid,proto3" json:"matchid,omitempty"`
	Tableid   string   `protobuf:"bytes,2,opt,name=tableid,proto3" json:"tableid,omitempty"`
	Players   []string `protobuf:"bytes,3,rep,name=players,proto3" json:"players,omitempty"`                       // List of player IDs
	Winner    int32    `protobuf:"varint,4,opt,name=winner,proto3" json:"winner,omitempty"`                        // Player ID of the winner
	EndReason int32    `protobuf:"varint,5,opt,name=end_reason,json=endReason,proto3" json:"end_reason,omitempty"` // 0: normal, 1: timeout, 2: player quit
}

func (x *GameEndAck) Reset() {
	*x = GameEndAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEndAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEndAck) ProtoMessage() {}

func (x *GameEndAck) ProtoReflect() protoreflect.Message {
	mi := &file_match_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEndAck.ProtoReflect.Descriptor instead.
func (*GameEndAck) Descriptor() ([]byte, []int) {
	return file_match_proto_rawDescGZIP(), []int{11}
}

func (x *GameEndAck) GetMatchid() string {
	if x != nil {
		return x.Matchid
	}
	return ""
}

func (x *GameEndAck) GetTableid() string {
	if x != nil {
		return x.Tableid
	}
	return ""
}

func (x *GameEndAck) GetPlayers() []string {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *GameEndAck) GetWinner() int32 {
	if x != nil {
		return x.Winner
	}
	return 0
}

func (x *GameEndAck) GetEndReason() int32 {
	if x != nil {
		return x.EndReason
	}
	return 0
}

type MatchCancelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Matchid  string `protobuf:"bytes,1,opt,name=matchid,proto3" json:"matchid,omitempty"`
	Playerid string `protobuf:"bytes,2,opt,name=playerid,proto3" json:"playerid,omitempty"`
}

func (x *MatchCancelReq) Reset() {
	*x = MatchCancelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchCancelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchCancelReq) ProtoMessage() {}

func (x *MatchCancelReq) ProtoReflect() protoreflect.Message {
	mi := &file_match_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchCancelReq.ProtoReflect.Descriptor instead.
func (*MatchCancelReq) Descriptor() ([]byte, []int) {
	return file_match_proto_rawDescGZIP(), []int{12}
}

func (x *MatchCancelReq) GetMatchid() string {
	if x != nil {
		return x.Matchid
	}
	return ""
}

func (x *MatchCancelReq) GetPlayerid() string {
	if x != nil {
		return x.Playerid
	}
	return ""
}

type MatchCancelAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Matchid   string `protobuf:"bytes,1,opt,name=matchid,proto3" json:"matchid,omitempty"`
	ErrorCode int32  `protobuf:"varint,2,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"` // 0: success, 1: match not found, 2: player not in match
}

func (x *MatchCancelAck) Reset() {
	*x = MatchCancelAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchCancelAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchCancelAck) ProtoMessage() {}

func (x *MatchCancelAck) ProtoReflect() protoreflect.Message {
	mi := &file_match_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchCancelAck.ProtoReflect.Descriptor instead.
func (*MatchCancelAck) Descriptor() ([]byte, []int) {
	return file_match_proto_rawDescGZIP(), []int{13}
}

func (x *MatchCancelAck) GetMatchid() string {
	if x != nil {
		return x.Matchid
	}
	return ""
}

func (x *MatchCancelAck) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

type TableInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tableid  string   `protobuf:"bytes,1,opt,name=tableid,proto3" json:"tableid,omitempty"`
	Players  []string `protobuf:"bytes,2,rep,name=players,proto3" json:"players,omitempty"`
	Status   int32    `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`                     // 0: waiting, 1: playing, 2: ended
	CreateAt int64    `protobuf:"varint,4,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"` // unix timestamp
}

func (x *TableInfo) Reset() {
	*x = TableInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableInfo) ProtoMessage() {}

func (x *TableInfo) ProtoReflect() protoreflect.Message {
	mi := &file_match_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableInfo.ProtoReflect.Descriptor instead.
func (*TableInfo) Descriptor() ([]byte, []int) {
	return file_match_proto_rawDescGZIP(), []int{14}
}

func (x *TableInfo) GetTableid() string {
	if x != nil {
		return x.Tableid
	}
	return ""
}

func (x *TableInfo) GetPlayers() []string {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *TableInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *TableInfo) GetCreateAt() int64 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

type MatchStatusAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Matchid   string       `protobuf:"bytes,1,opt,name=matchid,proto3" json:"matchid,omitempty"`
	Status    int32        `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"` // 0: waiting, 1: matching, 2: playing, 3: ended
	Players   []string     `protobuf:"bytes,3,rep,name=players,proto3" json:"players,omitempty"`
	Timeout   int32        `protobuf:"varint,4,opt,name=timeout,proto3" json:"timeout,omitempty"` // seconds remaining
	Tables    []*TableInfo `protobuf:"bytes,5,rep,name=tables,proto3" json:"tables,omitempty"`
	MatchType int32        `protobuf:"varint,6,opt,name=match_type,json=matchType,proto3" json:"match_type,omitempty"` // 0: normal, 1: room card
	Creator   string       `protobuf:"bytes,7,opt,name=creator,proto3" json:"creator,omitempty"`                       // room card creator uid
}

func (x *MatchStatusAck) Reset() {
	*x = MatchStatusAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchStatusAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchStatusAck) ProtoMessage() {}

func (x *MatchStatusAck) ProtoReflect() protoreflect.Message {
	mi := &file_match_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchStatusAck.ProtoReflect.Descriptor instead.
func (*MatchStatusAck) Descriptor() ([]byte, []int) {
	return file_match_proto_rawDescGZIP(), []int{15}
}

func (x *MatchStatusAck) GetMatchid() string {
	if x != nil {
		return x.Matchid
	}
	return ""
}

func (x *MatchStatusAck) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MatchStatusAck) GetPlayers() []string {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *MatchStatusAck) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *MatchStatusAck) GetTables() []*TableInfo {
	if x != nil {
		return x.Tables
	}
	return nil
}

func (x *MatchStatusAck) GetMatchType() int32 {
	if x != nil {
		return x.MatchType
	}
	return 0
}

func (x *MatchStatusAck) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

type PlayerReadyNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Matchid  string `protobuf:"bytes,1,opt,name=matchid,proto3" json:"matchid,omitempty"`
	Playerid string `protobuf:"bytes,2,opt,name=playerid,proto3" json:"playerid,omitempty"`
	IsReady  bool   `protobuf:"varint,3,opt,name=is_ready,json=isReady,proto3" json:"is_ready,omitempty"`
}

func (x *PlayerReadyNotify) Reset() {
	*x = PlayerReadyNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerReadyNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerReadyNotify) ProtoMessage() {}

func (x *PlayerReadyNotify) ProtoReflect() protoreflect.Message {
	mi := &file_match_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerReadyNotify.ProtoReflect.Descriptor instead.
func (*PlayerReadyNotify) Descriptor() ([]byte, []int) {
	return file_match_proto_rawDescGZIP(), []int{16}
}

func (x *PlayerReadyNotify) GetMatchid() string {
	if x != nil {
		return x.Matchid
	}
	return ""
}

func (x *PlayerReadyNotify) GetPlayerid() string {
	if x != nil {
		return x.Playerid
	}
	return ""
}

func (x *PlayerReadyNotify) GetIsReady() bool {
	if x != nil {
		return x.IsReady
	}
	return false
}

// 房卡创建请求
type RoomCardCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameType   string `protobuf:"bytes,1,opt,name=game_type,json=gameType,proto3" json:"game_type,omitempty"`        // 游戏类型
	MaxPlayers int32  `protobuf:"varint,2,opt,name=max_players,json=maxPlayers,proto3" json:"max_players,omitempty"` // 最大玩家数
	RoundCount int32  `protobuf:"varint,3,opt,name=round_count,json=roundCount,proto3" json:"round_count,omitempty"` // 总局数
	Password   string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`                        // 房间密码(可选)
}

func (x *RoomCardCreateReq) Reset() {
	*x = RoomCardCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomCardCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomCardCreateReq) ProtoMessage() {}

func (x *RoomCardCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_match_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomCardCreateReq.ProtoReflect.Descriptor instead.
func (*RoomCardCreateReq) Descriptor() ([]byte, []int) {
	return file_match_proto_rawDescGZIP(), []int{17}
}

func (x *RoomCardCreateReq) GetGameType() string {
	if x != nil {
		return x.GameType
	}
	return ""
}

func (x *RoomCardCreateReq) GetMaxPlayers() int32 {
	if x != nil {
		return x.MaxPlayers
	}
	return 0
}

func (x *RoomCardCreateReq) GetRoundCount() int32 {
	if x != nil {
		return x.RoundCount
	}
	return 0
}

func (x *RoomCardCreateReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// 房卡创建响应
type RoomCardCreateAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Matchid    string `protobuf:"bytes,1,opt,name=matchid,proto3" json:"matchid,omitempty"`                         // 房间ID
	ErrorCode  int32  `protobuf:"varint,2,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`   // 0: 成功, 1: 房卡不足, 2: 创建失败
	InviteCode string `protobuf:"bytes,3,opt,name=invite_code,json=inviteCode,proto3" json:"invite_code,omitempty"` // 邀请码
}

func (x *RoomCardCreateAck) Reset() {
	*x = RoomCardCreateAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomCardCreateAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomCardCreateAck) ProtoMessage() {}

func (x *RoomCardCreateAck) ProtoReflect() protoreflect.Message {
	mi := &file_match_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomCardCreateAck.ProtoReflect.Descriptor instead.
func (*RoomCardCreateAck) Descriptor() ([]byte, []int) {
	return file_match_proto_rawDescGZIP(), []int{18}
}

func (x *RoomCardCreateAck) GetMatchid() string {
	if x != nil {
		return x.Matchid
	}
	return ""
}

func (x *RoomCardCreateAck) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *RoomCardCreateAck) GetInviteCode() string {
	if x != nil {
		return x.InviteCode
	}
	return ""
}

// 房卡加入请求
type RoomCardJoinReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Matchid    string `protobuf:"bytes,1,opt,name=matchid,proto3" json:"matchid,omitempty"`                         // 房间ID
	InviteCode string `protobuf:"bytes,2,opt,name=invite_code,json=inviteCode,proto3" json:"invite_code,omitempty"` // 邀请码
	Password   string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`                       // 房间密码(如果有)
}

func (x *RoomCardJoinReq) Reset() {
	*x = RoomCardJoinReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomCardJoinReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomCardJoinReq) ProtoMessage() {}

func (x *RoomCardJoinReq) ProtoReflect() protoreflect.Message {
	mi := &file_match_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomCardJoinReq.ProtoReflect.Descriptor instead.
func (*RoomCardJoinReq) Descriptor() ([]byte, []int) {
	return file_match_proto_rawDescGZIP(), []int{19}
}

func (x *RoomCardJoinReq) GetMatchid() string {
	if x != nil {
		return x.Matchid
	}
	return ""
}

func (x *RoomCardJoinReq) GetInviteCode() string {
	if x != nil {
		return x.InviteCode
	}
	return ""
}

func (x *RoomCardJoinReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// 房卡加入响应
type RoomCardJoinAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Matchid        string `protobuf:"bytes,1,opt,name=matchid,proto3" json:"matchid,omitempty"`
	ErrorCode      int32  `protobuf:"varint,2,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`                // 0: 成功, 1: 房间不存在, 2: 密码错误, 3: 房间已满
	Creator        string `protobuf:"bytes,3,opt,name=creator,proto3" json:"creator,omitempty"`                                      // 房主UID
	CurrentPlayers int32  `protobuf:"varint,4,opt,name=current_players,json=currentPlayers,proto3" json:"current_players,omitempty"` // 当前玩家人数
	MaxPlayers     int32  `protobuf:"varint,5,opt,name=max_players,json=maxPlayers,proto3" json:"max_players,omitempty"`             // 最大玩家人数
}

func (x *RoomCardJoinAck) Reset() {
	*x = RoomCardJoinAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_match_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomCardJoinAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomCardJoinAck) ProtoMessage() {}

func (x *RoomCardJoinAck) ProtoReflect() protoreflect.Message {
	mi := &file_match_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomCardJoinAck.ProtoReflect.Descriptor instead.
func (*RoomCardJoinAck) Descriptor() ([]byte, []int) {
	return file_match_proto_rawDescGZIP(), []int{20}
}

func (x *RoomCardJoinAck) GetMatchid() string {
	if x != nil {
		return x.Matchid
	}
	return ""
}

func (x *RoomCardJoinAck) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *RoomCardJoinAck) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *RoomCardJoinAck) GetCurrentPlayers() int32 {
	if x != nil {
		return x.CurrentPlayers
	}
	return 0
}

func (x *RoomCardJoinAck) GetMaxPlayers() int32 {
	if x != nil {
		return x.MaxPlayers
	}
	return 0
}

var File_match_proto protoreflect.FileDescriptor

var file_match_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb3, 0x03, 0x0a, 0x08, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x69, 0x64, 0x12, 0x32,
	0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x12, 0x35, 0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x6f, 0x75, 0x74, 0x5f, 0x72, 0x65,
	0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x69, 0x67, 0x6e, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0a, 0x73,
	0x69, 0x67, 0x6e, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x12, 0x3f, 0x0a, 0x0f, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x74, 0x65,
	0x72, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0d, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x12, 0x42, 0x0a, 0x10, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0e,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x4c,
	0x0a, 0x14, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x11, 0x72, 0x6f, 0x6f, 0x6d, 0x43,
	0x61, 0x72, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x46, 0x0a, 0x12,
	0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x72,
	0x65, 0x71, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x48, 0x00, 0x52, 0x0f, 0x72, 0x6f, 0x6f, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x4a, 0x6f, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x42, 0x05, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x22, 0x25, 0x0a, 0x09, 0x53,
	0x69, 0x67, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x69, 0x64, 0x22, 0x26, 0x0a, 0x0a, 0x53, 0x69, 0x67, 0x6e, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x64, 0x22, 0x43, 0x0a, 0x0d, 0x45, 0x6e,
	0x74, 0x65, 0x72, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x69, 0x64, 0x22,
	0x2a, 0x0a, 0x0e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x64, 0x22, 0xa2, 0x05, 0x0a, 0x08,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x41, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x5f, 0x61,
	0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x41, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x75, 0x70, 0x41, 0x63, 0x6b, 0x12, 0x42, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x6b, 0x12, 0x3f, 0x0a, 0x0f,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x61, 0x63, 0x6b, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45,
	0x6e, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x41, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0d,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x41, 0x63, 0x6b, 0x12, 0x3c, 0x0a,
	0x0e, 0x61, 0x64, 0x64, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x6b, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x64, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0c, 0x61,
	0x64, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x6b, 0x12, 0x3c, 0x0a, 0x0e, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x61, 0x63, 0x6b, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x41, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0c, 0x67, 0x61, 0x6d,
	0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x41, 0x63, 0x6b, 0x12, 0x36, 0x0a, 0x0c, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x63, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64,
	0x41, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x41, 0x63,
	0x6b, 0x12, 0x37, 0x0a, 0x0a, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x61, 0x63, 0x6b, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x63, 0x6b, 0x48, 0x00, 0x52,
	0x09, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x63, 0x6b, 0x12, 0x37, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5f, 0x61, 0x63, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x41, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x41, 0x63, 0x6b, 0x12, 0x4c, 0x0a, 0x14, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x63, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x43,
	0x61, 0x72, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x11,
	0x72, 0x6f, 0x6f, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x6b, 0x12, 0x46, 0x0a, 0x12, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6a,
	0x6f, 0x69, 0x6e, 0x5f, 0x61, 0x63, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x4a,
	0x6f, 0x69, 0x6e, 0x41, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0f, 0x72, 0x6f, 0x6f, 0x6d, 0x43, 0x61,
	0x72, 0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x6b, 0x42, 0x05, 0x0a, 0x03, 0x61, 0x63, 0x6b,
	0x22, 0x44, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x41, 0x63, 0x6b, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x5e, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22, 0x5d, 0x0a, 0x0d, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x41, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x73, 0x22, 0x47, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x41, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x5e,
	0x0a, 0x0c, 0x47, 0x61, 0x6d, 0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x41, 0x63, 0x6b, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x69, 0x64, 0x22, 0x91,
	0x01, 0x0a, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x41, 0x63, 0x6b, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x77,
	0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x69, 0x6e,
	0x6e, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x22, 0x46, 0x0a, 0x0e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x69, 0x64, 0x22, 0x49, 0x0a, 0x0e, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x74, 0x0a, 0x09, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x22, 0xda, 0x01, 0x0a, 0x0e,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x63, 0x6b, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x64, 0x0a, 0x11, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x52, 0x65, 0x61, 0x64, 0x79, 0x22, 0x8e,
	0x01, 0x0a, 0x11, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22,
	0x6d, 0x0a, 0x11, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x68,
	0x0a, 0x0f, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xae, 0x01, 0x0a, 0x0f, 0x52, 0x6f, 0x6f,
	0x6d, 0x43, 0x61, 0x72, 0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x41, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x27, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d,
	0x61, 0x78, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2e, 0x2f,
	0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_match_proto_rawDescOnce sync.Once
	file_match_proto_rawDescData = file_match_proto_rawDesc
)

func file_match_proto_rawDescGZIP() []byte {
	file_match_proto_rawDescOnce.Do(func() {
		file_match_proto_rawDescData = protoimpl.X.CompressGZIP(file_match_proto_rawDescData)
	})
	return file_match_proto_rawDescData
}

var file_match_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_match_proto_goTypes = []interface{}{
	(*MatchReq)(nil),          // 0: cproto.MatchReq
	(*SignupReq)(nil),         // 1: cproto.SignupReq
	(*SignoutReq)(nil),        // 2: cproto.SignoutReq
	(*EnterMatchReq)(nil),     // 3: cproto.EnterMatchReq
	(*MatchStatusReq)(nil),    // 4: cproto.MatchStatusReq
	(*MatchAck)(nil),          // 5: cproto.MatchAck
	(*SignupAck)(nil),         // 6: cproto.SignupAck
	(*StartClientAck)(nil),    // 7: cproto.StartClientAck
	(*EnterMatchAck)(nil),     // 8: cproto.EnterMatchAck
	(*AddPlayerAck)(nil),      // 9: cproto.AddPlayerAck
	(*GameBeginAck)(nil),      // 10: cproto.GameBeginAck
	(*GameEndAck)(nil),        // 11: cproto.GameEndAck
	(*MatchCancelReq)(nil),    // 12: cproto.MatchCancelReq
	(*MatchCancelAck)(nil),    // 13: cproto.MatchCancelAck
	(*TableInfo)(nil),         // 14: cproto.TableInfo
	(*MatchStatusAck)(nil),    // 15: cproto.MatchStatusAck
	(*PlayerReadyNotify)(nil), // 16: cproto.PlayerReadyNotify
	(*RoomCardCreateReq)(nil), // 17: cproto.RoomCardCreateReq
	(*RoomCardCreateAck)(nil), // 18: cproto.RoomCardCreateAck
	(*RoomCardJoinReq)(nil),   // 19: cproto.RoomCardJoinReq
	(*RoomCardJoinAck)(nil),   // 20: cproto.RoomCardJoinAck
}
var file_match_proto_depIdxs = []int32{
	1,  // 0: cproto.MatchReq.signup_req:type_name -> cproto.SignupReq
	2,  // 1: cproto.MatchReq.signout_req:type_name -> cproto.SignoutReq
	3,  // 2: cproto.MatchReq.enter_match_req:type_name -> cproto.EnterMatchReq
	4,  // 3: cproto.MatchReq.match_status_req:type_name -> cproto.MatchStatusReq
	17, // 4: cproto.MatchReq.room_card_create_req:type_name -> cproto.RoomCardCreateReq
	19, // 5: cproto.MatchReq.room_card_join_req:type_name -> cproto.RoomCardJoinReq
	6,  // 6: cproto.MatchAck.signup_ack:type_name -> cproto.SignupAck
	7,  // 7: cproto.MatchAck.start_client_ack:type_name -> cproto.StartClientAck
	8,  // 8: cproto.MatchAck.enter_match_ack:type_name -> cproto.EnterMatchAck
	9,  // 9: cproto.MatchAck.add_player_ack:type_name -> cproto.AddPlayerAck
	10, // 10: cproto.MatchAck.game_begin_ack:type_name -> cproto.GameBeginAck
	11, // 11: cproto.MatchAck.game_end_ack:type_name -> cproto.GameEndAck
	13, // 12: cproto.MatchAck.cancel_ack:type_name -> cproto.MatchCancelAck
	15, // 13: cproto.MatchAck.status_ack:type_name -> cproto.MatchStatusAck
	18, // 14: cproto.MatchAck.room_card_create_ack:type_name -> cproto.RoomCardCreateAck
	20, // 15: cproto.MatchAck.room_card_join_ack:type_name -> cproto.RoomCardJoinAck
	14, // 16: cproto.MatchStatusAck.tables:type_name -> cproto.TableInfo
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_match_proto_init() }
func file_match_proto_init() {
	if File_match_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_match_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignoutReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnterMatchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignupAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartClientAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnterMatchAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPlayerAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameBeginAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEndAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchCancelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchCancelAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchStatusAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerReadyNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomCardCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomCardCreateAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomCardJoinReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_match_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomCardJoinAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_match_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*MatchReq_SignupReq)(nil),
		(*MatchReq_SignoutReq)(nil),
		(*MatchReq_EnterMatchReq)(nil),
		(*MatchReq_MatchStatusReq)(nil),
		(*MatchReq_RoomCardCreateReq)(nil),
		(*MatchReq_RoomCardJoinReq)(nil),
	}
	file_match_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*MatchAck_SignupAck)(nil),
		(*MatchAck_StartClientAck)(nil),
		(*MatchAck_EnterMatchAck)(nil),
		(*MatchAck_AddPlayerAck)(nil),
		(*MatchAck_GameBeginAck)(nil),
		(*MatchAck_GameEndAck)(nil),
		(*MatchAck_CancelAck)(nil),
		(*MatchAck_StatusAck)(nil),
		(*MatchAck_RoomCardCreateAck)(nil),
		(*MatchAck_RoomCardJoinAck)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_match_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_match_proto_goTypes,
		DependencyIndexes: file_match_proto_depIdxs,
		MessageInfos:      file_match_proto_msgTypes,
	}.Build()
	File_match_proto = out.File
	file_match_proto_rawDesc = nil
	file_match_proto_goTypes = nil
	file_match_proto_depIdxs = nil
}
