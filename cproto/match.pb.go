// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: match.proto

package cproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MatchReq struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Serverid string                 `protobuf:"bytes,1,opt,name=serverid,proto3" json:"serverid,omitempty"`
	Matchid  int32                  `protobuf:"varint,2,opt,name=matchid,proto3" json:"matchid,omitempty"` // 比赛ID
	// Types that are valid to be assigned to Req:
	//
	//	*MatchReq_CreateRoomReq
	//	*MatchReq_JoinRoomReq
	Req           isMatchReq_Req `protobuf_oneof:"req"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchReq) Reset() {
	*x = MatchReq{}
	mi := &file_match_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchReq) ProtoMessage() {}

func (x *MatchReq) ProtoReflect() protoreflect.Message {
	mi := &file_match_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchReq.ProtoReflect.Descriptor instead.
func (*MatchReq) Descriptor() ([]byte, []int) {
	return file_match_proto_rawDescGZIP(), []int{0}
}

func (x *MatchReq) GetServerid() string {
	if x != nil {
		return x.Serverid
	}
	return ""
}

func (x *MatchReq) GetMatchid() int32 {
	if x != nil {
		return x.Matchid
	}
	return 0
}

func (x *MatchReq) GetReq() isMatchReq_Req {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *MatchReq) GetCreateRoomReq() *CreateRoomReq {
	if x != nil {
		if x, ok := x.Req.(*MatchReq_CreateRoomReq); ok {
			return x.CreateRoomReq
		}
	}
	return nil
}

func (x *MatchReq) GetJoinRoomReq() *JoinRoomReq {
	if x != nil {
		if x, ok := x.Req.(*MatchReq_JoinRoomReq); ok {
			return x.JoinRoomReq
		}
	}
	return nil
}

type isMatchReq_Req interface {
	isMatchReq_Req()
}

type MatchReq_CreateRoomReq struct {
	CreateRoomReq *CreateRoomReq `protobuf:"bytes,3,opt,name=create_room_req,json=createRoomReq,proto3,oneof"`
}

type MatchReq_JoinRoomReq struct {
	JoinRoomReq *JoinRoomReq `protobuf:"bytes,4,opt,name=join_room_req,json=joinRoomReq,proto3,oneof"`
}

func (*MatchReq_CreateRoomReq) isMatchReq_Req() {}

func (*MatchReq_JoinRoomReq) isMatchReq_Req() {}

type MatchAck struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Serverid string                 `protobuf:"bytes,1,opt,name=serverid,proto3" json:"serverid,omitempty"`
	Matchid  int32                  `protobuf:"varint,2,opt,name=matchid,proto3" json:"matchid,omitempty"` // 比赛ID
	// Types that are valid to be assigned to Ack:
	//
	//	*MatchAck_CreateRoomAck
	//	*MatchAck_JoinRoomAck
	Ack           isMatchAck_Ack `protobuf_oneof:"ack"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchAck) Reset() {
	*x = MatchAck{}
	mi := &file_match_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchAck) ProtoMessage() {}

func (x *MatchAck) ProtoReflect() protoreflect.Message {
	mi := &file_match_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchAck.ProtoReflect.Descriptor instead.
func (*MatchAck) Descriptor() ([]byte, []int) {
	return file_match_proto_rawDescGZIP(), []int{1}
}

func (x *MatchAck) GetServerid() string {
	if x != nil {
		return x.Serverid
	}
	return ""
}

func (x *MatchAck) GetMatchid() int32 {
	if x != nil {
		return x.Matchid
	}
	return 0
}

func (x *MatchAck) GetAck() isMatchAck_Ack {
	if x != nil {
		return x.Ack
	}
	return nil
}

func (x *MatchAck) GetCreateRoomAck() *CreateRoomAck {
	if x != nil {
		if x, ok := x.Ack.(*MatchAck_CreateRoomAck); ok {
			return x.CreateRoomAck
		}
	}
	return nil
}

func (x *MatchAck) GetJoinRoomAck() *JoinRoomAck {
	if x != nil {
		if x, ok := x.Ack.(*MatchAck_JoinRoomAck); ok {
			return x.JoinRoomAck
		}
	}
	return nil
}

type isMatchAck_Ack interface {
	isMatchAck_Ack()
}

type MatchAck_CreateRoomAck struct {
	CreateRoomAck *CreateRoomAck `protobuf:"bytes,3,opt,name=create_room_ack,json=createRoomAck,proto3,oneof"`
}

type MatchAck_JoinRoomAck struct {
	JoinRoomAck *JoinRoomAck `protobuf:"bytes,4,opt,name=join_room_ack,json=joinRoomAck,proto3,oneof"`
}

func (*MatchAck_CreateRoomAck) isMatchAck_Ack() {}

func (*MatchAck_JoinRoomAck) isMatchAck_Ack() {}

type CreateRoomReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GameCount     int32                  `protobuf:"varint,1,opt,name=game_count,json=gameCount,proto3" json:"game_count,omitempty"` // 局数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRoomReq) Reset() {
	*x = CreateRoomReq{}
	mi := &file_match_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRoomReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoomReq) ProtoMessage() {}

func (x *CreateRoomReq) ProtoReflect() protoreflect.Message {
	mi := &file_match_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoomReq.ProtoReflect.Descriptor instead.
func (*CreateRoomReq) Descriptor() ([]byte, []int) {
	return file_match_proto_rawDescGZIP(), []int{2}
}

func (x *CreateRoomReq) GetGameCount() int32 {
	if x != nil {
		return x.GameCount
	}
	return 0
}

type JoinRoomReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Gameid        int32                  `protobuf:"varint,1,opt,name=gameid,proto3" json:"gameid,omitempty"`   // 游戏ID
	Tableid       int32                  `protobuf:"varint,2,opt,name=tableid,proto3" json:"tableid,omitempty"` // 桌号
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinRoomReq) Reset() {
	*x = JoinRoomReq{}
	mi := &file_match_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinRoomReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRoomReq) ProtoMessage() {}

func (x *JoinRoomReq) ProtoReflect() protoreflect.Message {
	mi := &file_match_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRoomReq.ProtoReflect.Descriptor instead.
func (*JoinRoomReq) Descriptor() ([]byte, []int) {
	return file_match_proto_rawDescGZIP(), []int{3}
}

func (x *JoinRoomReq) GetGameid() int32 {
	if x != nil {
		return x.Gameid
	}
	return 0
}

func (x *JoinRoomReq) GetTableid() int32 {
	if x != nil {
		return x.Tableid
	}
	return 0
}

type CreateRoomAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ErrorCode     int32                  `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"` // 0: 成功, 1: 房间已存在, 2: 房间已满
	Tableid       int32                  `protobuf:"varint,2,opt,name=tableid,proto3" json:"tableid,omitempty"`                      // 桌号
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRoomAck) Reset() {
	*x = CreateRoomAck{}
	mi := &file_match_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRoomAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoomAck) ProtoMessage() {}

func (x *CreateRoomAck) ProtoReflect() protoreflect.Message {
	mi := &file_match_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoomAck.ProtoReflect.Descriptor instead.
func (*CreateRoomAck) Descriptor() ([]byte, []int) {
	return file_match_proto_rawDescGZIP(), []int{4}
}

func (x *CreateRoomAck) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *CreateRoomAck) GetTableid() int32 {
	if x != nil {
		return x.Tableid
	}
	return 0
}

type JoinRoomAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ErrorCode     int32                  `protobuf:"varint,3,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"` // 0: 成功, 1: 房间不存在, 2: 密码错误, 3: 房间已满
	Tableid       int32                  `protobuf:"varint,2,opt,name=tableid,proto3" json:"tableid,omitempty"`                      // 桌号
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinRoomAck) Reset() {
	*x = JoinRoomAck{}
	mi := &file_match_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinRoomAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRoomAck) ProtoMessage() {}

func (x *JoinRoomAck) ProtoReflect() protoreflect.Message {
	mi := &file_match_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRoomAck.ProtoReflect.Descriptor instead.
func (*JoinRoomAck) Descriptor() ([]byte, []int) {
	return file_match_proto_rawDescGZIP(), []int{5}
}

func (x *JoinRoomAck) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *JoinRoomAck) GetTableid() int32 {
	if x != nil {
		return x.Tableid
	}
	return 0
}

var File_match_proto protoreflect.FileDescriptor

const file_match_proto_rawDesc = "" +
	"\n" +
	"\vmatch.proto\x12\x06cproto\"\xc3\x01\n" +
	"\bMatchReq\x12\x1a\n" +
	"\bserverid\x18\x01 \x01(\tR\bserverid\x12\x18\n" +
	"\amatchid\x18\x02 \x01(\x05R\amatchid\x12?\n" +
	"\x0fcreate_room_req\x18\x03 \x01(\v2\x15.cproto.CreateRoomReqH\x00R\rcreateRoomReq\x129\n" +
	"\rjoin_room_req\x18\x04 \x01(\v2\x13.cproto.JoinRoomReqH\x00R\vjoinRoomReqB\x05\n" +
	"\x03req\"\xc3\x01\n" +
	"\bMatchAck\x12\x1a\n" +
	"\bserverid\x18\x01 \x01(\tR\bserverid\x12\x18\n" +
	"\amatchid\x18\x02 \x01(\x05R\amatchid\x12?\n" +
	"\x0fcreate_room_ack\x18\x03 \x01(\v2\x15.cproto.CreateRoomAckH\x00R\rcreateRoomAck\x129\n" +
	"\rjoin_room_ack\x18\x04 \x01(\v2\x13.cproto.JoinRoomAckH\x00R\vjoinRoomAckB\x05\n" +
	"\x03ack\".\n" +
	"\rCreateRoomReq\x12\x1d\n" +
	"\n" +
	"game_count\x18\x01 \x01(\x05R\tgameCount\"?\n" +
	"\vJoinRoomReq\x12\x16\n" +
	"\x06gameid\x18\x01 \x01(\x05R\x06gameid\x12\x18\n" +
	"\atableid\x18\x02 \x01(\x05R\atableid\"H\n" +
	"\rCreateRoomAck\x12\x1d\n" +
	"\n" +
	"error_code\x18\x01 \x01(\x05R\terrorCode\x12\x18\n" +
	"\atableid\x18\x02 \x01(\x05R\atableid\"F\n" +
	"\vJoinRoomAck\x12\x1d\n" +
	"\n" +
	"error_code\x18\x03 \x01(\x05R\terrorCode\x12\x18\n" +
	"\atableid\x18\x02 \x01(\x05R\atableidB\vZ\t../cprotob\x06proto3"

var (
	file_match_proto_rawDescOnce sync.Once
	file_match_proto_rawDescData []byte
)

func file_match_proto_rawDescGZIP() []byte {
	file_match_proto_rawDescOnce.Do(func() {
		file_match_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_match_proto_rawDesc), len(file_match_proto_rawDesc)))
	})
	return file_match_proto_rawDescData
}

var file_match_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_match_proto_goTypes = []any{
	(*MatchReq)(nil),      // 0: cproto.MatchReq
	(*MatchAck)(nil),      // 1: cproto.MatchAck
	(*CreateRoomReq)(nil), // 2: cproto.CreateRoomReq
	(*JoinRoomReq)(nil),   // 3: cproto.JoinRoomReq
	(*CreateRoomAck)(nil), // 4: cproto.CreateRoomAck
	(*JoinRoomAck)(nil),   // 5: cproto.JoinRoomAck
}
var file_match_proto_depIdxs = []int32{
	2, // 0: cproto.MatchReq.create_room_req:type_name -> cproto.CreateRoomReq
	3, // 1: cproto.MatchReq.join_room_req:type_name -> cproto.JoinRoomReq
	4, // 2: cproto.MatchAck.create_room_ack:type_name -> cproto.CreateRoomAck
	5, // 3: cproto.MatchAck.join_room_ack:type_name -> cproto.JoinRoomAck
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_match_proto_init() }
func file_match_proto_init() {
	if File_match_proto != nil {
		return
	}
	file_match_proto_msgTypes[0].OneofWrappers = []any{
		(*MatchReq_CreateRoomReq)(nil),
		(*MatchReq_JoinRoomReq)(nil),
	}
	file_match_proto_msgTypes[1].OneofWrappers = []any{
		(*MatchAck_CreateRoomAck)(nil),
		(*MatchAck_JoinRoomAck)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_match_proto_rawDesc), len(file_match_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_match_proto_goTypes,
		DependencyIndexes: file_match_proto_depIdxs,
		MessageInfos:      file_match_proto_msgTypes,
	}.Build()
	File_match_proto = out.File
	file_match_proto_goTypes = nil
	file_match_proto_depIdxs = nil
}
