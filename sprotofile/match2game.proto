syntax = "proto3";

package sproto;
option go_package = "../sproto";

message Match2GameReq {
  int32 gameid = 1; // 游戏ID
  int32 matchid = 2;
  int32 tableid = 3;
  oneof req {
    AddTableReq add_table_req = 4;
    CancelTableReq cancel_table_req = 5;
    AddPlayerReq add_player_req = 6;
  }
}

message Match2GameAck {
  int32 gameid = 1; // 游戏ID
  int32 matchid = 2;
  int32 tableid = 3;
  oneof ack {
    AddTableAck add_table_ack = 4;
    AddPlayerAck add_player_ack = 5;
    CancelTableAck cancel_table_ack = 6;
    TableResultAck table_result_ack = 7;
  }
}

message AddTableReq {  
  string game_config = 1;
  int32 score_base = 2;
  int32 match_type = 3; // 0: 普通匹配, 1: 房卡模式
  int32 game_count = 4; // 游戏局数
  int32 player_count = 5; // 玩家数量
}

message AddPlayerReq {
  string playerid = 1; // 玩家ID
  int32 seatnum = 2; // 座位号
  string icon_url = 3; // 玩家头像
  string nickname = 4; // 玩家昵称
  int32 score = 5; // 玩家分数
}

message CancelTableReq {
  int32 reason = 1; // 取消原因
}

message AddTableAck {    
  int32 error_code = 1; // 0: 成功, 1: 桌号不存在, 2: 玩家已在桌上
}

message AddPlayerAck{
  int32 error_code = 1; // 0: 成功, 1: 桌号不存在, 2: 玩家已在桌上
}

message CancelTableAck {
  int32 error_code = 1; // 0: 成功, 1: 桌号不存在
}   

message TableResultAck {     
  int32 error_code = 1; // 0: 成功, 1: 桌号不存在, 2: 其他错误
  repeated PlayerResult playerids = 2; // 玩家ID列表
}

message PlayerResult {
  string playerid = 1; // 玩家ID
  int32 score = 2; // 玩家得分
  int32 rank = 3; // 玩家排名
}