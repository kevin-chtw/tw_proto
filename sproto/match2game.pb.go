// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: match2game.proto

package sproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Match2GameReq struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Gameid  int32                  `protobuf:"varint,1,opt,name=gameid,proto3" json:"gameid,omitempty"` // 游戏ID
	Matchid int32                  `protobuf:"varint,2,opt,name=matchid,proto3" json:"matchid,omitempty"`
	Tableid int32                  `protobuf:"varint,3,opt,name=tableid,proto3" json:"tableid,omitempty"`
	// Types that are valid to be assigned to Req:
	//
	//	*Match2GameReq_AddTableReq
	//	*Match2GameReq_CancelTableReq
	//	*Match2GameReq_AddPlayerReq
	Req           isMatch2GameReq_Req `protobuf_oneof:"req"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Match2GameReq) Reset() {
	*x = Match2GameReq{}
	mi := &file_match2game_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Match2GameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Match2GameReq) ProtoMessage() {}

func (x *Match2GameReq) ProtoReflect() protoreflect.Message {
	mi := &file_match2game_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Match2GameReq.ProtoReflect.Descriptor instead.
func (*Match2GameReq) Descriptor() ([]byte, []int) {
	return file_match2game_proto_rawDescGZIP(), []int{0}
}

func (x *Match2GameReq) GetGameid() int32 {
	if x != nil {
		return x.Gameid
	}
	return 0
}

func (x *Match2GameReq) GetMatchid() int32 {
	if x != nil {
		return x.Matchid
	}
	return 0
}

func (x *Match2GameReq) GetTableid() int32 {
	if x != nil {
		return x.Tableid
	}
	return 0
}

func (x *Match2GameReq) GetReq() isMatch2GameReq_Req {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *Match2GameReq) GetAddTableReq() *AddTableReq {
	if x != nil {
		if x, ok := x.Req.(*Match2GameReq_AddTableReq); ok {
			return x.AddTableReq
		}
	}
	return nil
}

func (x *Match2GameReq) GetCancelTableReq() *CancelTableReq {
	if x != nil {
		if x, ok := x.Req.(*Match2GameReq_CancelTableReq); ok {
			return x.CancelTableReq
		}
	}
	return nil
}

func (x *Match2GameReq) GetAddPlayerReq() *AddPlayerReq {
	if x != nil {
		if x, ok := x.Req.(*Match2GameReq_AddPlayerReq); ok {
			return x.AddPlayerReq
		}
	}
	return nil
}

type isMatch2GameReq_Req interface {
	isMatch2GameReq_Req()
}

type Match2GameReq_AddTableReq struct {
	AddTableReq *AddTableReq `protobuf:"bytes,4,opt,name=add_table_req,json=addTableReq,proto3,oneof"`
}

type Match2GameReq_CancelTableReq struct {
	CancelTableReq *CancelTableReq `protobuf:"bytes,5,opt,name=cancel_table_req,json=cancelTableReq,proto3,oneof"`
}

type Match2GameReq_AddPlayerReq struct {
	AddPlayerReq *AddPlayerReq `protobuf:"bytes,6,opt,name=add_player_req,json=addPlayerReq,proto3,oneof"`
}

func (*Match2GameReq_AddTableReq) isMatch2GameReq_Req() {}

func (*Match2GameReq_CancelTableReq) isMatch2GameReq_Req() {}

func (*Match2GameReq_AddPlayerReq) isMatch2GameReq_Req() {}

type Match2GameAck struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Gameid  int32                  `protobuf:"varint,1,opt,name=gameid,proto3" json:"gameid,omitempty"` // 游戏ID
	Matchid int32                  `protobuf:"varint,2,opt,name=matchid,proto3" json:"matchid,omitempty"`
	Tableid int32                  `protobuf:"varint,3,opt,name=tableid,proto3" json:"tableid,omitempty"`
	// Types that are valid to be assigned to Ack:
	//
	//	*Match2GameAck_AddTableAck
	//	*Match2GameAck_AddPlayerAck
	//	*Match2GameAck_CancelTableAck
	//	*Match2GameAck_TableResultAck
	Ack           isMatch2GameAck_Ack `protobuf_oneof:"ack"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Match2GameAck) Reset() {
	*x = Match2GameAck{}
	mi := &file_match2game_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Match2GameAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Match2GameAck) ProtoMessage() {}

func (x *Match2GameAck) ProtoReflect() protoreflect.Message {
	mi := &file_match2game_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Match2GameAck.ProtoReflect.Descriptor instead.
func (*Match2GameAck) Descriptor() ([]byte, []int) {
	return file_match2game_proto_rawDescGZIP(), []int{1}
}

func (x *Match2GameAck) GetGameid() int32 {
	if x != nil {
		return x.Gameid
	}
	return 0
}

func (x *Match2GameAck) GetMatchid() int32 {
	if x != nil {
		return x.Matchid
	}
	return 0
}

func (x *Match2GameAck) GetTableid() int32 {
	if x != nil {
		return x.Tableid
	}
	return 0
}

func (x *Match2GameAck) GetAck() isMatch2GameAck_Ack {
	if x != nil {
		return x.Ack
	}
	return nil
}

func (x *Match2GameAck) GetAddTableAck() *AddTableAck {
	if x != nil {
		if x, ok := x.Ack.(*Match2GameAck_AddTableAck); ok {
			return x.AddTableAck
		}
	}
	return nil
}

func (x *Match2GameAck) GetAddPlayerAck() *AddPlayerAck {
	if x != nil {
		if x, ok := x.Ack.(*Match2GameAck_AddPlayerAck); ok {
			return x.AddPlayerAck
		}
	}
	return nil
}

func (x *Match2GameAck) GetCancelTableAck() *CancelTableAck {
	if x != nil {
		if x, ok := x.Ack.(*Match2GameAck_CancelTableAck); ok {
			return x.CancelTableAck
		}
	}
	return nil
}

func (x *Match2GameAck) GetTableResultAck() *TableResultAck {
	if x != nil {
		if x, ok := x.Ack.(*Match2GameAck_TableResultAck); ok {
			return x.TableResultAck
		}
	}
	return nil
}

type isMatch2GameAck_Ack interface {
	isMatch2GameAck_Ack()
}

type Match2GameAck_AddTableAck struct {
	AddTableAck *AddTableAck `protobuf:"bytes,4,opt,name=add_table_ack,json=addTableAck,proto3,oneof"`
}

type Match2GameAck_AddPlayerAck struct {
	AddPlayerAck *AddPlayerAck `protobuf:"bytes,5,opt,name=add_player_ack,json=addPlayerAck,proto3,oneof"`
}

type Match2GameAck_CancelTableAck struct {
	CancelTableAck *CancelTableAck `protobuf:"bytes,6,opt,name=cancel_table_ack,json=cancelTableAck,proto3,oneof"`
}

type Match2GameAck_TableResultAck struct {
	TableResultAck *TableResultAck `protobuf:"bytes,7,opt,name=table_result_ack,json=tableResultAck,proto3,oneof"`
}

func (*Match2GameAck_AddTableAck) isMatch2GameAck_Ack() {}

func (*Match2GameAck_AddPlayerAck) isMatch2GameAck_Ack() {}

func (*Match2GameAck_CancelTableAck) isMatch2GameAck_Ack() {}

func (*Match2GameAck_TableResultAck) isMatch2GameAck_Ack() {}

type AddTableReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MatchType     int32                  `protobuf:"varint,1,opt,name=match_type,json=matchType,proto3" json:"match_type,omitempty"`       // 0: 普通匹配, 1: 房卡模式
	ScoreBase     int32                  `protobuf:"varint,2,opt,name=score_base,json=scoreBase,proto3" json:"score_base,omitempty"`       // 分数基数
	GameCount     int32                  `protobuf:"varint,3,opt,name=game_count,json=gameCount,proto3" json:"game_count,omitempty"`       // 游戏局数
	PlayerCount   int32                  `protobuf:"varint,4,opt,name=player_count,json=playerCount,proto3" json:"player_count,omitempty"` // 玩家数量
	GameConfig    string                 `protobuf:"bytes,5,opt,name=game_config,json=gameConfig,proto3" json:"game_config,omitempty"`     // 游戏配置
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddTableReq) Reset() {
	*x = AddTableReq{}
	mi := &file_match2game_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTableReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTableReq) ProtoMessage() {}

func (x *AddTableReq) ProtoReflect() protoreflect.Message {
	mi := &file_match2game_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTableReq.ProtoReflect.Descriptor instead.
func (*AddTableReq) Descriptor() ([]byte, []int) {
	return file_match2game_proto_rawDescGZIP(), []int{2}
}

func (x *AddTableReq) GetMatchType() int32 {
	if x != nil {
		return x.MatchType
	}
	return 0
}

func (x *AddTableReq) GetScoreBase() int32 {
	if x != nil {
		return x.ScoreBase
	}
	return 0
}

func (x *AddTableReq) GetGameCount() int32 {
	if x != nil {
		return x.GameCount
	}
	return 0
}

func (x *AddTableReq) GetPlayerCount() int32 {
	if x != nil {
		return x.PlayerCount
	}
	return 0
}

func (x *AddTableReq) GetGameConfig() string {
	if x != nil {
		return x.GameConfig
	}
	return ""
}

type AddPlayerReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Playerid      string                 `protobuf:"bytes,1,opt,name=playerid,proto3" json:"playerid,omitempty"`              // 玩家ID
	Seat          int32                  `protobuf:"varint,2,opt,name=seat,proto3" json:"seat,omitempty"`                     // 座位号
	IconUrl       string                 `protobuf:"bytes,3,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"` // 玩家头像
	Nickname      string                 `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"`              // 玩家昵称
	Score         int64                  `protobuf:"varint,5,opt,name=score,proto3" json:"score,omitempty"`                   // 玩家分数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddPlayerReq) Reset() {
	*x = AddPlayerReq{}
	mi := &file_match2game_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddPlayerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPlayerReq) ProtoMessage() {}

func (x *AddPlayerReq) ProtoReflect() protoreflect.Message {
	mi := &file_match2game_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPlayerReq.ProtoReflect.Descriptor instead.
func (*AddPlayerReq) Descriptor() ([]byte, []int) {
	return file_match2game_proto_rawDescGZIP(), []int{3}
}

func (x *AddPlayerReq) GetPlayerid() string {
	if x != nil {
		return x.Playerid
	}
	return ""
}

func (x *AddPlayerReq) GetSeat() int32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *AddPlayerReq) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *AddPlayerReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *AddPlayerReq) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

type CancelTableReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reason        int32                  `protobuf:"varint,1,opt,name=reason,proto3" json:"reason,omitempty"` // 取消原因
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelTableReq) Reset() {
	*x = CancelTableReq{}
	mi := &file_match2game_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelTableReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelTableReq) ProtoMessage() {}

func (x *CancelTableReq) ProtoReflect() protoreflect.Message {
	mi := &file_match2game_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelTableReq.ProtoReflect.Descriptor instead.
func (*CancelTableReq) Descriptor() ([]byte, []int) {
	return file_match2game_proto_rawDescGZIP(), []int{4}
}

func (x *CancelTableReq) GetReason() int32 {
	if x != nil {
		return x.Reason
	}
	return 0
}

type AddTableAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ErrorCode     int32                  `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"` // 0: 成功, 1: 桌号不存在, 2: 玩家已在桌上
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddTableAck) Reset() {
	*x = AddTableAck{}
	mi := &file_match2game_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTableAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTableAck) ProtoMessage() {}

func (x *AddTableAck) ProtoReflect() protoreflect.Message {
	mi := &file_match2game_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTableAck.ProtoReflect.Descriptor instead.
func (*AddTableAck) Descriptor() ([]byte, []int) {
	return file_match2game_proto_rawDescGZIP(), []int{5}
}

func (x *AddTableAck) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

type AddPlayerAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ErrorCode     int32                  `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"` // 0: 成功, 1: 桌号不存在, 2: 玩家已在桌上
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddPlayerAck) Reset() {
	*x = AddPlayerAck{}
	mi := &file_match2game_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddPlayerAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPlayerAck) ProtoMessage() {}

func (x *AddPlayerAck) ProtoReflect() protoreflect.Message {
	mi := &file_match2game_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPlayerAck.ProtoReflect.Descriptor instead.
func (*AddPlayerAck) Descriptor() ([]byte, []int) {
	return file_match2game_proto_rawDescGZIP(), []int{6}
}

func (x *AddPlayerAck) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

type CancelTableAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ErrorCode     int32                  `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"` // 0: 成功, 1: 桌号不存在
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelTableAck) Reset() {
	*x = CancelTableAck{}
	mi := &file_match2game_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelTableAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelTableAck) ProtoMessage() {}

func (x *CancelTableAck) ProtoReflect() protoreflect.Message {
	mi := &file_match2game_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelTableAck.ProtoReflect.Descriptor instead.
func (*CancelTableAck) Descriptor() ([]byte, []int) {
	return file_match2game_proto_rawDescGZIP(), []int{7}
}

func (x *CancelTableAck) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

type TableResultAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ErrorCode     int32                  `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"` // 0: 成功, 1: 桌号不存在, 2: 其他错误
	Playerids     []*PlayerResult        `protobuf:"bytes,2,rep,name=playerids,proto3" json:"playerids,omitempty"`                   // 玩家ID列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TableResultAck) Reset() {
	*x = TableResultAck{}
	mi := &file_match2game_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableResultAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableResultAck) ProtoMessage() {}

func (x *TableResultAck) ProtoReflect() protoreflect.Message {
	mi := &file_match2game_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableResultAck.ProtoReflect.Descriptor instead.
func (*TableResultAck) Descriptor() ([]byte, []int) {
	return file_match2game_proto_rawDescGZIP(), []int{8}
}

func (x *TableResultAck) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *TableResultAck) GetPlayerids() []*PlayerResult {
	if x != nil {
		return x.Playerids
	}
	return nil
}

type PlayerResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Playerid      string                 `protobuf:"bytes,1,opt,name=playerid,proto3" json:"playerid,omitempty"` // 玩家ID
	Score         int32                  `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`      // 玩家得分
	Rank          int32                  `protobuf:"varint,3,opt,name=rank,proto3" json:"rank,omitempty"`        // 玩家排名
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerResult) Reset() {
	*x = PlayerResult{}
	mi := &file_match2game_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerResult) ProtoMessage() {}

func (x *PlayerResult) ProtoReflect() protoreflect.Message {
	mi := &file_match2game_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerResult.ProtoReflect.Descriptor instead.
func (*PlayerResult) Descriptor() ([]byte, []int) {
	return file_match2game_proto_rawDescGZIP(), []int{9}
}

func (x *PlayerResult) GetPlayerid() string {
	if x != nil {
		return x.Playerid
	}
	return ""
}

func (x *PlayerResult) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *PlayerResult) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

var File_match2game_proto protoreflect.FileDescriptor

const file_match2game_proto_rawDesc = "" +
	"\n" +
	"\x10match2game.proto\x12\x06sproto\"\x9f\x02\n" +
	"\rMatch2GameReq\x12\x16\n" +
	"\x06gameid\x18\x01 \x01(\x05R\x06gameid\x12\x18\n" +
	"\amatchid\x18\x02 \x01(\x05R\amatchid\x12\x18\n" +
	"\atableid\x18\x03 \x01(\x05R\atableid\x129\n" +
	"\radd_table_req\x18\x04 \x01(\v2\x13.sproto.AddTableReqH\x00R\vaddTableReq\x12B\n" +
	"\x10cancel_table_req\x18\x05 \x01(\v2\x16.sproto.CancelTableReqH\x00R\x0ecancelTableReq\x12<\n" +
	"\x0eadd_player_req\x18\x06 \x01(\v2\x14.sproto.AddPlayerReqH\x00R\faddPlayerReqB\x05\n" +
	"\x03req\"\xe3\x02\n" +
	"\rMatch2GameAck\x12\x16\n" +
	"\x06gameid\x18\x01 \x01(\x05R\x06gameid\x12\x18\n" +
	"\amatchid\x18\x02 \x01(\x05R\amatchid\x12\x18\n" +
	"\atableid\x18\x03 \x01(\x05R\atableid\x129\n" +
	"\radd_table_ack\x18\x04 \x01(\v2\x13.sproto.AddTableAckH\x00R\vaddTableAck\x12<\n" +
	"\x0eadd_player_ack\x18\x05 \x01(\v2\x14.sproto.AddPlayerAckH\x00R\faddPlayerAck\x12B\n" +
	"\x10cancel_table_ack\x18\x06 \x01(\v2\x16.sproto.CancelTableAckH\x00R\x0ecancelTableAck\x12B\n" +
	"\x10table_result_ack\x18\a \x01(\v2\x16.sproto.TableResultAckH\x00R\x0etableResultAckB\x05\n" +
	"\x03ack\"\xae\x01\n" +
	"\vAddTableReq\x12\x1d\n" +
	"\n" +
	"match_type\x18\x01 \x01(\x05R\tmatchType\x12\x1d\n" +
	"\n" +
	"score_base\x18\x02 \x01(\x05R\tscoreBase\x12\x1d\n" +
	"\n" +
	"game_count\x18\x03 \x01(\x05R\tgameCount\x12!\n" +
	"\fplayer_count\x18\x04 \x01(\x05R\vplayerCount\x12\x1f\n" +
	"\vgame_config\x18\x05 \x01(\tR\n" +
	"gameConfig\"\x8b\x01\n" +
	"\fAddPlayerReq\x12\x1a\n" +
	"\bplayerid\x18\x01 \x01(\tR\bplayerid\x12\x12\n" +
	"\x04seat\x18\x02 \x01(\x05R\x04seat\x12\x19\n" +
	"\bicon_url\x18\x03 \x01(\tR\aiconUrl\x12\x1a\n" +
	"\bnickname\x18\x04 \x01(\tR\bnickname\x12\x14\n" +
	"\x05score\x18\x05 \x01(\x03R\x05score\"(\n" +
	"\x0eCancelTableReq\x12\x16\n" +
	"\x06reason\x18\x01 \x01(\x05R\x06reason\",\n" +
	"\vAddTableAck\x12\x1d\n" +
	"\n" +
	"error_code\x18\x01 \x01(\x05R\terrorCode\"-\n" +
	"\fAddPlayerAck\x12\x1d\n" +
	"\n" +
	"error_code\x18\x01 \x01(\x05R\terrorCode\"/\n" +
	"\x0eCancelTableAck\x12\x1d\n" +
	"\n" +
	"error_code\x18\x01 \x01(\x05R\terrorCode\"c\n" +
	"\x0eTableResultAck\x12\x1d\n" +
	"\n" +
	"error_code\x18\x01 \x01(\x05R\terrorCode\x122\n" +
	"\tplayerids\x18\x02 \x03(\v2\x14.sproto.PlayerResultR\tplayerids\"T\n" +
	"\fPlayerResult\x12\x1a\n" +
	"\bplayerid\x18\x01 \x01(\tR\bplayerid\x12\x14\n" +
	"\x05score\x18\x02 \x01(\x05R\x05score\x12\x12\n" +
	"\x04rank\x18\x03 \x01(\x05R\x04rankB\vZ\t../sprotob\x06proto3"

var (
	file_match2game_proto_rawDescOnce sync.Once
	file_match2game_proto_rawDescData []byte
)

func file_match2game_proto_rawDescGZIP() []byte {
	file_match2game_proto_rawDescOnce.Do(func() {
		file_match2game_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_match2game_proto_rawDesc), len(file_match2game_proto_rawDesc)))
	})
	return file_match2game_proto_rawDescData
}

var file_match2game_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_match2game_proto_goTypes = []any{
	(*Match2GameReq)(nil),  // 0: sproto.Match2GameReq
	(*Match2GameAck)(nil),  // 1: sproto.Match2GameAck
	(*AddTableReq)(nil),    // 2: sproto.AddTableReq
	(*AddPlayerReq)(nil),   // 3: sproto.AddPlayerReq
	(*CancelTableReq)(nil), // 4: sproto.CancelTableReq
	(*AddTableAck)(nil),    // 5: sproto.AddTableAck
	(*AddPlayerAck)(nil),   // 6: sproto.AddPlayerAck
	(*CancelTableAck)(nil), // 7: sproto.CancelTableAck
	(*TableResultAck)(nil), // 8: sproto.TableResultAck
	(*PlayerResult)(nil),   // 9: sproto.PlayerResult
}
var file_match2game_proto_depIdxs = []int32{
	2, // 0: sproto.Match2GameReq.add_table_req:type_name -> sproto.AddTableReq
	4, // 1: sproto.Match2GameReq.cancel_table_req:type_name -> sproto.CancelTableReq
	3, // 2: sproto.Match2GameReq.add_player_req:type_name -> sproto.AddPlayerReq
	5, // 3: sproto.Match2GameAck.add_table_ack:type_name -> sproto.AddTableAck
	6, // 4: sproto.Match2GameAck.add_player_ack:type_name -> sproto.AddPlayerAck
	7, // 5: sproto.Match2GameAck.cancel_table_ack:type_name -> sproto.CancelTableAck
	8, // 6: sproto.Match2GameAck.table_result_ack:type_name -> sproto.TableResultAck
	9, // 7: sproto.TableResultAck.playerids:type_name -> sproto.PlayerResult
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_match2game_proto_init() }
func file_match2game_proto_init() {
	if File_match2game_proto != nil {
		return
	}
	file_match2game_proto_msgTypes[0].OneofWrappers = []any{
		(*Match2GameReq_AddTableReq)(nil),
		(*Match2GameReq_CancelTableReq)(nil),
		(*Match2GameReq_AddPlayerReq)(nil),
	}
	file_match2game_proto_msgTypes[1].OneofWrappers = []any{
		(*Match2GameAck_AddTableAck)(nil),
		(*Match2GameAck_AddPlayerAck)(nil),
		(*Match2GameAck_CancelTableAck)(nil),
		(*Match2GameAck_TableResultAck)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_match2game_proto_rawDesc), len(file_match2game_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_match2game_proto_goTypes,
		DependencyIndexes: file_match2game_proto_depIdxs,
		MessageInfos:      file_match2game_proto_msgTypes,
	}.Build()
	File_match2game_proto = out.File
	file_match2game_proto_goTypes = nil
	file_match2game_proto_depIdxs = nil
}
