// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.3
// source: game_remote.proto

package sproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GameReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Matchid       int32                  `protobuf:"varint,1,opt,name=matchid,proto3" json:"matchid,omitempty"`
	Tableid       int32                  `protobuf:"varint,2,opt,name=tableid,proto3" json:"tableid,omitempty"`
	Req           *anypb.Any             `protobuf:"bytes,3,opt,name=req,proto3" json:"req,omitempty"` // 请求内容
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameReq) Reset() {
	*x = GameReq{}
	mi := &file_game_remote_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameReq) ProtoMessage() {}

func (x *GameReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_remote_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameReq.ProtoReflect.Descriptor instead.
func (*GameReq) Descriptor() ([]byte, []int) {
	return file_game_remote_proto_rawDescGZIP(), []int{0}
}

func (x *GameReq) GetMatchid() int32 {
	if x != nil {
		return x.Matchid
	}
	return 0
}

func (x *GameReq) GetTableid() int32 {
	if x != nil {
		return x.Tableid
	}
	return 0
}

func (x *GameReq) GetReq() *anypb.Any {
	if x != nil {
		return x.Req
	}
	return nil
}

type GameAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Matchid       int32                  `protobuf:"varint,1,opt,name=matchid,proto3" json:"matchid,omitempty"`
	Tableid       int32                  `protobuf:"varint,2,opt,name=tableid,proto3" json:"tableid,omitempty"`
	Ack           *anypb.Any             `protobuf:"bytes,3,opt,name=ack,proto3" json:"ack,omitempty"` // 响应内容
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameAck) Reset() {
	*x = GameAck{}
	mi := &file_game_remote_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameAck) ProtoMessage() {}

func (x *GameAck) ProtoReflect() protoreflect.Message {
	mi := &file_game_remote_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameAck.ProtoReflect.Descriptor instead.
func (*GameAck) Descriptor() ([]byte, []int) {
	return file_game_remote_proto_rawDescGZIP(), []int{1}
}

func (x *GameAck) GetMatchid() int32 {
	if x != nil {
		return x.Matchid
	}
	return 0
}

func (x *GameAck) GetTableid() int32 {
	if x != nil {
		return x.Tableid
	}
	return 0
}

func (x *GameAck) GetAck() *anypb.Any {
	if x != nil {
		return x.Ack
	}
	return nil
}

type AddTableReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MatchType     string                 `protobuf:"bytes,1,opt,name=match_type,json=matchType,proto3" json:"match_type,omitempty"`                                                             // 比赛服务类型
	ScoreBase     int64                  `protobuf:"varint,2,opt,name=score_base,json=scoreBase,proto3" json:"score_base,omitempty"`                                                            // 分数基数
	GameCount     int32                  `protobuf:"varint,3,opt,name=game_count,json=gameCount,proto3" json:"game_count,omitempty"`                                                            // 游戏局数
	PlayerCount   int32                  `protobuf:"varint,4,opt,name=player_count,json=playerCount,proto3" json:"player_count,omitempty"`                                                      // 玩家数量
	Property      string                 `protobuf:"bytes,5,opt,name=property,proto3" json:"property,omitempty"`                                                                                // 游戏配置
	Creator       string                 `protobuf:"bytes,6,opt,name=creator,proto3" json:"creator,omitempty"`                                                                                  // 创建者
	Desn          string                 `protobuf:"bytes,7,opt,name=desn,proto3" json:"desn,omitempty"`                                                                                        // 游戏描述
	Fdproperty    map[string]int32       `protobuf:"bytes,8,rep,name=fdproperty,proto3" json:"fdproperty,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // 好友房自选配置
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddTableReq) Reset() {
	*x = AddTableReq{}
	mi := &file_game_remote_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTableReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTableReq) ProtoMessage() {}

func (x *AddTableReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_remote_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTableReq.ProtoReflect.Descriptor instead.
func (*AddTableReq) Descriptor() ([]byte, []int) {
	return file_game_remote_proto_rawDescGZIP(), []int{2}
}

func (x *AddTableReq) GetMatchType() string {
	if x != nil {
		return x.MatchType
	}
	return ""
}

func (x *AddTableReq) GetScoreBase() int64 {
	if x != nil {
		return x.ScoreBase
	}
	return 0
}

func (x *AddTableReq) GetGameCount() int32 {
	if x != nil {
		return x.GameCount
	}
	return 0
}

func (x *AddTableReq) GetPlayerCount() int32 {
	if x != nil {
		return x.PlayerCount
	}
	return 0
}

func (x *AddTableReq) GetProperty() string {
	if x != nil {
		return x.Property
	}
	return ""
}

func (x *AddTableReq) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *AddTableReq) GetDesn() string {
	if x != nil {
		return x.Desn
	}
	return ""
}

func (x *AddTableReq) GetFdproperty() map[string]int32 {
	if x != nil {
		return x.Fdproperty
	}
	return nil
}

type AddPlayerReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Playerid      string                 `protobuf:"bytes,1,opt,name=playerid,proto3" json:"playerid,omitempty"`              // 玩家ID
	Seat          int32                  `protobuf:"varint,2,opt,name=seat,proto3" json:"seat,omitempty"`                     // 座位号
	IconUrl       string                 `protobuf:"bytes,3,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"` // 玩家头像
	Nickname      string                 `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"`              // 玩家昵称
	Score         int64                  `protobuf:"varint,5,opt,name=score,proto3" json:"score,omitempty"`                   // 玩家分数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddPlayerReq) Reset() {
	*x = AddPlayerReq{}
	mi := &file_game_remote_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddPlayerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPlayerReq) ProtoMessage() {}

func (x *AddPlayerReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_remote_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPlayerReq.ProtoReflect.Descriptor instead.
func (*AddPlayerReq) Descriptor() ([]byte, []int) {
	return file_game_remote_proto_rawDescGZIP(), []int{3}
}

func (x *AddPlayerReq) GetPlayerid() string {
	if x != nil {
		return x.Playerid
	}
	return ""
}

func (x *AddPlayerReq) GetSeat() int32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *AddPlayerReq) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *AddPlayerReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *AddPlayerReq) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

type CancelTableReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reason        int32                  `protobuf:"varint,1,opt,name=reason,proto3" json:"reason,omitempty"` // 取消原因
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelTableReq) Reset() {
	*x = CancelTableReq{}
	mi := &file_game_remote_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelTableReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelTableReq) ProtoMessage() {}

func (x *CancelTableReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_remote_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelTableReq.ProtoReflect.Descriptor instead.
func (*CancelTableReq) Descriptor() ([]byte, []int) {
	return file_game_remote_proto_rawDescGZIP(), []int{4}
}

func (x *CancelTableReq) GetReason() int32 {
	if x != nil {
		return x.Reason
	}
	return 0
}

type EmptyAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmptyAck) Reset() {
	*x = EmptyAck{}
	mi := &file_game_remote_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmptyAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyAck) ProtoMessage() {}

func (x *EmptyAck) ProtoReflect() protoreflect.Message {
	mi := &file_game_remote_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyAck.ProtoReflect.Descriptor instead.
func (*EmptyAck) Descriptor() ([]byte, []int) {
	return file_game_remote_proto_rawDescGZIP(), []int{5}
}

type ExitTableReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Playerid      string                 `protobuf:"bytes,1,opt,name=playerid,proto3" json:"playerid,omitempty"` // 玩家ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExitTableReq) Reset() {
	*x = ExitTableReq{}
	mi := &file_game_remote_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExitTableReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExitTableReq) ProtoMessage() {}

func (x *ExitTableReq) ProtoReflect() protoreflect.Message {
	mi := &file_game_remote_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExitTableReq.ProtoReflect.Descriptor instead.
func (*ExitTableReq) Descriptor() ([]byte, []int) {
	return file_game_remote_proto_rawDescGZIP(), []int{6}
}

func (x *ExitTableReq) GetPlayerid() string {
	if x != nil {
		return x.Playerid
	}
	return ""
}

type ExitTableAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Playerid      string                 `protobuf:"bytes,1,opt,name=playerid,proto3" json:"playerid,omitempty"` // 玩家ID
	Result        int32                  `protobuf:"varint,2,opt,name=result,proto3" json:"result,omitempty"`    // 退出结果 0-可退出，1-不可退出
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExitTableAck) Reset() {
	*x = ExitTableAck{}
	mi := &file_game_remote_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExitTableAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExitTableAck) ProtoMessage() {}

func (x *ExitTableAck) ProtoReflect() protoreflect.Message {
	mi := &file_game_remote_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExitTableAck.ProtoReflect.Descriptor instead.
func (*ExitTableAck) Descriptor() ([]byte, []int) {
	return file_game_remote_proto_rawDescGZIP(), []int{7}
}

func (x *ExitTableAck) GetPlayerid() string {
	if x != nil {
		return x.Playerid
	}
	return ""
}

func (x *ExitTableAck) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

var File_game_remote_proto protoreflect.FileDescriptor

const file_game_remote_proto_rawDesc = "" +
	"\n" +
	"\x11game_remote.proto\x12\x06sproto\x1a\x19google/protobuf/any.proto\"e\n" +
	"\aGameReq\x12\x18\n" +
	"\amatchid\x18\x01 \x01(\x05R\amatchid\x12\x18\n" +
	"\atableid\x18\x02 \x01(\x05R\atableid\x12&\n" +
	"\x03req\x18\x03 \x01(\v2\x14.google.protobuf.AnyR\x03req\"e\n" +
	"\aGameAck\x12\x18\n" +
	"\amatchid\x18\x01 \x01(\x05R\amatchid\x12\x18\n" +
	"\atableid\x18\x02 \x01(\x05R\atableid\x12&\n" +
	"\x03ack\x18\x03 \x01(\v2\x14.google.protobuf.AnyR\x03ack\"\xdb\x02\n" +
	"\vAddTableReq\x12\x1d\n" +
	"\n" +
	"match_type\x18\x01 \x01(\tR\tmatchType\x12\x1d\n" +
	"\n" +
	"score_base\x18\x02 \x01(\x03R\tscoreBase\x12\x1d\n" +
	"\n" +
	"game_count\x18\x03 \x01(\x05R\tgameCount\x12!\n" +
	"\fplayer_count\x18\x04 \x01(\x05R\vplayerCount\x12\x1a\n" +
	"\bproperty\x18\x05 \x01(\tR\bproperty\x12\x18\n" +
	"\acreator\x18\x06 \x01(\tR\acreator\x12\x12\n" +
	"\x04desn\x18\a \x01(\tR\x04desn\x12C\n" +
	"\n" +
	"fdproperty\x18\b \x03(\v2#.sproto.AddTableReq.FdpropertyEntryR\n" +
	"fdproperty\x1a=\n" +
	"\x0fFdpropertyEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"\x8b\x01\n" +
	"\fAddPlayerReq\x12\x1a\n" +
	"\bplayerid\x18\x01 \x01(\tR\bplayerid\x12\x12\n" +
	"\x04seat\x18\x02 \x01(\x05R\x04seat\x12\x19\n" +
	"\bicon_url\x18\x03 \x01(\tR\aiconUrl\x12\x1a\n" +
	"\bnickname\x18\x04 \x01(\tR\bnickname\x12\x14\n" +
	"\x05score\x18\x05 \x01(\x03R\x05score\"(\n" +
	"\x0eCancelTableReq\x12\x16\n" +
	"\x06reason\x18\x01 \x01(\x05R\x06reason\"\n" +
	"\n" +
	"\bEmptyAck\"*\n" +
	"\fExitTableReq\x12\x1a\n" +
	"\bplayerid\x18\x01 \x01(\tR\bplayerid\"B\n" +
	"\fExitTableAck\x12\x1a\n" +
	"\bplayerid\x18\x01 \x01(\tR\bplayerid\x12\x16\n" +
	"\x06result\x18\x02 \x01(\x05R\x06resultB\vZ\t../sprotob\x06proto3"

var (
	file_game_remote_proto_rawDescOnce sync.Once
	file_game_remote_proto_rawDescData []byte
)

func file_game_remote_proto_rawDescGZIP() []byte {
	file_game_remote_proto_rawDescOnce.Do(func() {
		file_game_remote_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_game_remote_proto_rawDesc), len(file_game_remote_proto_rawDesc)))
	})
	return file_game_remote_proto_rawDescData
}

var file_game_remote_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_game_remote_proto_goTypes = []any{
	(*GameReq)(nil),        // 0: sproto.GameReq
	(*GameAck)(nil),        // 1: sproto.GameAck
	(*AddTableReq)(nil),    // 2: sproto.AddTableReq
	(*AddPlayerReq)(nil),   // 3: sproto.AddPlayerReq
	(*CancelTableReq)(nil), // 4: sproto.CancelTableReq
	(*EmptyAck)(nil),       // 5: sproto.EmptyAck
	(*ExitTableReq)(nil),   // 6: sproto.ExitTableReq
	(*ExitTableAck)(nil),   // 7: sproto.ExitTableAck
	nil,                    // 8: sproto.AddTableReq.FdpropertyEntry
	(*anypb.Any)(nil),      // 9: google.protobuf.Any
}
var file_game_remote_proto_depIdxs = []int32{
	9, // 0: sproto.GameReq.req:type_name -> google.protobuf.Any
	9, // 1: sproto.GameAck.ack:type_name -> google.protobuf.Any
	8, // 2: sproto.AddTableReq.fdproperty:type_name -> sproto.AddTableReq.FdpropertyEntry
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_game_remote_proto_init() }
func file_game_remote_proto_init() {
	if File_game_remote_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_game_remote_proto_rawDesc), len(file_game_remote_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_game_remote_proto_goTypes,
		DependencyIndexes: file_game_remote_proto_depIdxs,
		MessageInfos:      file_game_remote_proto_msgTypes,
	}.Build()
	File_game_remote_proto = out.File
	file_game_remote_proto_goTypes = nil
	file_game_remote_proto_depIdxs = nil
}
