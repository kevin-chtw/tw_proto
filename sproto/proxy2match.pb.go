// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: proxy2match.proto

package sproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Proxy2MatchReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Req:
	//
	//	*Proxy2MatchReq_OnlineReq
	//	*Proxy2MatchReq_OfflineReq
	//	*Proxy2MatchReq_CreateRoomReq
	Req           isProxy2MatchReq_Req `protobuf_oneof:"req"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Proxy2MatchReq) Reset() {
	*x = Proxy2MatchReq{}
	mi := &file_proxy2match_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Proxy2MatchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Proxy2MatchReq) ProtoMessage() {}

func (x *Proxy2MatchReq) ProtoReflect() protoreflect.Message {
	mi := &file_proxy2match_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Proxy2MatchReq.ProtoReflect.Descriptor instead.
func (*Proxy2MatchReq) Descriptor() ([]byte, []int) {
	return file_proxy2match_proto_rawDescGZIP(), []int{0}
}

func (x *Proxy2MatchReq) GetReq() isProxy2MatchReq_Req {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *Proxy2MatchReq) GetOnlineReq() *OnlineReq {
	if x != nil {
		if x, ok := x.Req.(*Proxy2MatchReq_OnlineReq); ok {
			return x.OnlineReq
		}
	}
	return nil
}

func (x *Proxy2MatchReq) GetOfflineReq() *OfflineReq {
	if x != nil {
		if x, ok := x.Req.(*Proxy2MatchReq_OfflineReq); ok {
			return x.OfflineReq
		}
	}
	return nil
}

func (x *Proxy2MatchReq) GetCreateRoomReq() *CreateRoomReq {
	if x != nil {
		if x, ok := x.Req.(*Proxy2MatchReq_CreateRoomReq); ok {
			return x.CreateRoomReq
		}
	}
	return nil
}

type isProxy2MatchReq_Req interface {
	isProxy2MatchReq_Req()
}

type Proxy2MatchReq_OnlineReq struct {
	OnlineReq *OnlineReq `protobuf:"bytes,1,opt,name=online_req,json=onlineReq,proto3,oneof"`
}

type Proxy2MatchReq_OfflineReq struct {
	OfflineReq *OfflineReq `protobuf:"bytes,2,opt,name=offline_req,json=offlineReq,proto3,oneof"`
}

type Proxy2MatchReq_CreateRoomReq struct {
	CreateRoomReq *CreateRoomReq `protobuf:"bytes,3,opt,name=create_room_req,json=createRoomReq,proto3,oneof"`
}

func (*Proxy2MatchReq_OnlineReq) isProxy2MatchReq_Req() {}

func (*Proxy2MatchReq_OfflineReq) isProxy2MatchReq_Req() {}

func (*Proxy2MatchReq_CreateRoomReq) isProxy2MatchReq_Req() {}

type CreateRoomReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GameCount     int32                  `protobuf:"varint,1,opt,name=game_count,json=gameCount,proto3" json:"game_count,omitempty"`
	MaxPlayers    int32                  `protobuf:"varint,2,opt,name=max_players,json=maxPlayers,proto3" json:"max_players,omitempty"`
	GameType      string                 `protobuf:"bytes,3,opt,name=game_type,json=gameType,proto3" json:"game_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRoomReq) Reset() {
	*x = CreateRoomReq{}
	mi := &file_proxy2match_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRoomReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoomReq) ProtoMessage() {}

func (x *CreateRoomReq) ProtoReflect() protoreflect.Message {
	mi := &file_proxy2match_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoomReq.ProtoReflect.Descriptor instead.
func (*CreateRoomReq) Descriptor() ([]byte, []int) {
	return file_proxy2match_proto_rawDescGZIP(), []int{1}
}

func (x *CreateRoomReq) GetGameCount() int32 {
	if x != nil {
		return x.GameCount
	}
	return 0
}

func (x *CreateRoomReq) GetMaxPlayers() int32 {
	if x != nil {
		return x.MaxPlayers
	}
	return 0
}

func (x *CreateRoomReq) GetGameType() string {
	if x != nil {
		return x.GameType
	}
	return ""
}

type Proxy2MatchAck struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Req:
	//
	//	*Proxy2MatchAck_OnlineAck
	//	*Proxy2MatchAck_OfflineAck
	Req           isProxy2MatchAck_Req `protobuf_oneof:"req"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Proxy2MatchAck) Reset() {
	*x = Proxy2MatchAck{}
	mi := &file_proxy2match_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Proxy2MatchAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Proxy2MatchAck) ProtoMessage() {}

func (x *Proxy2MatchAck) ProtoReflect() protoreflect.Message {
	mi := &file_proxy2match_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Proxy2MatchAck.ProtoReflect.Descriptor instead.
func (*Proxy2MatchAck) Descriptor() ([]byte, []int) {
	return file_proxy2match_proto_rawDescGZIP(), []int{2}
}

func (x *Proxy2MatchAck) GetReq() isProxy2MatchAck_Req {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *Proxy2MatchAck) GetOnlineAck() *OnlineAck {
	if x != nil {
		if x, ok := x.Req.(*Proxy2MatchAck_OnlineAck); ok {
			return x.OnlineAck
		}
	}
	return nil
}

func (x *Proxy2MatchAck) GetOfflineAck() *OfflineAck {
	if x != nil {
		if x, ok := x.Req.(*Proxy2MatchAck_OfflineAck); ok {
			return x.OfflineAck
		}
	}
	return nil
}

type isProxy2MatchAck_Req interface {
	isProxy2MatchAck_Req()
}

type Proxy2MatchAck_OnlineAck struct {
	OnlineAck *OnlineAck `protobuf:"bytes,1,opt,name=online_ack,json=onlineAck,proto3,oneof"`
}

type Proxy2MatchAck_OfflineAck struct {
	OfflineAck *OfflineAck `protobuf:"bytes,2,opt,name=offline_ack,json=offlineAck,proto3,oneof"`
}

func (*Proxy2MatchAck_OnlineAck) isProxy2MatchAck_Req() {}

func (*Proxy2MatchAck_OfflineAck) isProxy2MatchAck_Req() {}

type OnlineReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OnlineReq) Reset() {
	*x = OnlineReq{}
	mi := &file_proxy2match_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnlineReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineReq) ProtoMessage() {}

func (x *OnlineReq) ProtoReflect() protoreflect.Message {
	mi := &file_proxy2match_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineReq.ProtoReflect.Descriptor instead.
func (*OnlineReq) Descriptor() ([]byte, []int) {
	return file_proxy2match_proto_rawDescGZIP(), []int{3}
}

func (x *OnlineReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type OnlineAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OnlineAck) Reset() {
	*x = OnlineAck{}
	mi := &file_proxy2match_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnlineAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineAck) ProtoMessage() {}

func (x *OnlineAck) ProtoReflect() protoreflect.Message {
	mi := &file_proxy2match_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineAck.ProtoReflect.Descriptor instead.
func (*OnlineAck) Descriptor() ([]byte, []int) {
	return file_proxy2match_proto_rawDescGZIP(), []int{4}
}

func (x *OnlineAck) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type OfflineReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OfflineReq) Reset() {
	*x = OfflineReq{}
	mi := &file_proxy2match_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OfflineReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfflineReq) ProtoMessage() {}

func (x *OfflineReq) ProtoReflect() protoreflect.Message {
	mi := &file_proxy2match_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfflineReq.ProtoReflect.Descriptor instead.
func (*OfflineReq) Descriptor() ([]byte, []int) {
	return file_proxy2match_proto_rawDescGZIP(), []int{5}
}

func (x *OfflineReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type OfflineAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OfflineAck) Reset() {
	*x = OfflineAck{}
	mi := &file_proxy2match_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OfflineAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfflineAck) ProtoMessage() {}

func (x *OfflineAck) ProtoReflect() protoreflect.Message {
	mi := &file_proxy2match_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfflineAck.ProtoReflect.Descriptor instead.
func (*OfflineAck) Descriptor() ([]byte, []int) {
	return file_proxy2match_proto_rawDescGZIP(), []int{6}
}

func (x *OfflineAck) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

var File_proxy2match_proto protoreflect.FileDescriptor

const file_proxy2match_proto_rawDesc = "" +
	"\n" +
	"\x11proxy2match.proto\x12\x06sproto\"\xc3\x01\n" +
	"\x0eProxy2MatchReq\x122\n" +
	"\n" +
	"online_req\x18\x01 \x01(\v2\x11.sproto.OnlineReqH\x00R\tonlineReq\x125\n" +
	"\voffline_req\x18\x02 \x01(\v2\x12.sproto.OfflineReqH\x00R\n" +
	"offlineReq\x12?\n" +
	"\x0fcreate_room_req\x18\x03 \x01(\v2\x15.sproto.CreateRoomReqH\x00R\rcreateRoomReqB\x05\n" +
	"\x03req\"l\n" +
	"\rCreateRoomReq\x12\x1d\n" +
	"\n" +
	"game_count\x18\x01 \x01(\x05R\tgameCount\x12\x1f\n" +
	"\vmax_players\x18\x02 \x01(\x05R\n" +
	"maxPlayers\x12\x1b\n" +
	"\tgame_type\x18\x03 \x01(\tR\bgameType\"\x82\x01\n" +
	"\x0eProxy2MatchAck\x122\n" +
	"\n" +
	"online_ack\x18\x01 \x01(\v2\x11.sproto.OnlineAckH\x00R\tonlineAck\x125\n" +
	"\voffline_ack\x18\x02 \x01(\v2\x12.sproto.OfflineAckH\x00R\n" +
	"offlineAckB\x05\n" +
	"\x03req\"\x1d\n" +
	"\tOnlineReq\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\tR\x03uid\"\x1d\n" +
	"\tOnlineAck\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\tR\x03uid\"\x1e\n" +
	"\n" +
	"OfflineReq\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\tR\x03uid\"\x1e\n" +
	"\n" +
	"OfflineAck\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\tR\x03uidB\vZ\t../sprotob\x06proto3"

var (
	file_proxy2match_proto_rawDescOnce sync.Once
	file_proxy2match_proto_rawDescData []byte
)

func file_proxy2match_proto_rawDescGZIP() []byte {
	file_proxy2match_proto_rawDescOnce.Do(func() {
		file_proxy2match_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proxy2match_proto_rawDesc), len(file_proxy2match_proto_rawDesc)))
	})
	return file_proxy2match_proto_rawDescData
}

var file_proxy2match_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proxy2match_proto_goTypes = []any{
	(*Proxy2MatchReq)(nil), // 0: sproto.Proxy2MatchReq
	(*CreateRoomReq)(nil),  // 1: sproto.CreateRoomReq
	(*Proxy2MatchAck)(nil), // 2: sproto.Proxy2MatchAck
	(*OnlineReq)(nil),      // 3: sproto.OnlineReq
	(*OnlineAck)(nil),      // 4: sproto.OnlineAck
	(*OfflineReq)(nil),     // 5: sproto.OfflineReq
	(*OfflineAck)(nil),     // 6: sproto.OfflineAck
}
var file_proxy2match_proto_depIdxs = []int32{
	3, // 0: sproto.Proxy2MatchReq.online_req:type_name -> sproto.OnlineReq
	5, // 1: sproto.Proxy2MatchReq.offline_req:type_name -> sproto.OfflineReq
	1, // 2: sproto.Proxy2MatchReq.create_room_req:type_name -> sproto.CreateRoomReq
	4, // 3: sproto.Proxy2MatchAck.online_ack:type_name -> sproto.OnlineAck
	6, // 4: sproto.Proxy2MatchAck.offline_ack:type_name -> sproto.OfflineAck
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_proxy2match_proto_init() }
func file_proxy2match_proto_init() {
	if File_proxy2match_proto != nil {
		return
	}
	file_proxy2match_proto_msgTypes[0].OneofWrappers = []any{
		(*Proxy2MatchReq_OnlineReq)(nil),
		(*Proxy2MatchReq_OfflineReq)(nil),
		(*Proxy2MatchReq_CreateRoomReq)(nil),
	}
	file_proxy2match_proto_msgTypes[2].OneofWrappers = []any{
		(*Proxy2MatchAck_OnlineAck)(nil),
		(*Proxy2MatchAck_OfflineAck)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proxy2match_proto_rawDesc), len(file_proxy2match_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proxy2match_proto_goTypes,
		DependencyIndexes: file_proxy2match_proto_depIdxs,
		MessageInfos:      file_proxy2match_proto_msgTypes,
	}.Build()
	File_proxy2match_proto = out.File
	file_proxy2match_proto_goTypes = nil
	file_proxy2match_proto_depIdxs = nil
}
