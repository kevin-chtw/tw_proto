syntax = "proto3";

import "google/protobuf/any.proto";

package cproto;
option go_package = "../cproto";

message GameReq {
  string serverid = 1;
  int32 matchid = 2; // 比赛ID
  int32 tableid = 3; // 桌号
  google.protobuf.Any req = 4;
}

message GameAck {
  string serverid = 1;
  int32 matchid = 2; // 比赛ID
  int32 tableid = 3; // 桌号
  google.protobuf.Any ack = 4;
}

message EnterGameReq {  
}

message GameReadyReq {
  bool ready = 1; // 是否准备
}

//解散请求
message GameDissolveReq {
  bool agree = 1; //是否同意解散
}

message EnterGameAck {
  int32 tableid = 1; // 桌号
  int64 score_base = 2; // 分数基数
  int32 game_count = 3; // 游戏局数
  int32 cur_game_count = 4; // 当前游戏局数
  int32 player_count = 5; // 玩家数量
  string property = 6; // 游戏配置
  string creator = 7; // 创建者
  string desn = 8; // 游戏描述
  map<string,int32> fdproperty = 9; // 好友房自选配置
}

message TablePlayerAck {
  string uid = 1; // 玩家ID
  string nickname = 2; // 玩家昵称
  string avatar = 3; // 玩家头像
  int32 vip = 4; // VIP等级
  int64 diamond = 5; // 钻石
  int32 seat = 6; // 座位号
  bool ready = 7; // 是否准备
}

message TableMsgReq {  
  bytes msg = 1; // 消息内容
}

message TableMsgAck {
  bytes msg = 1; // 消息内容
}

message GameReadyAck {
  int32 seat = 1; // 座位号
  bool ready = 2; // 是否准备
}

message GameDissolveAck {
  int64 starttime = 1; // 解散发起时间
  int64 endtime = 2; // 解散结束时间
  int32 seat = 3; // 座位号
  map<int32,bool> agreed = 4; // 是否同意解散
}

message GameDissolveResultAck{
  bool dissovle = 1; //解散确认 
}

// 单局游戏开始
message GameBeginAck {
  int32 cur_game_count = 1; // 当前游戏局数
}

// 单局游戏结束
message GameOverAck {
  int32 cur_game_count = 1; // 当前游戏局数
  repeated bool ready = 2; // 玩家准备状态
}

// 历史消息开始
message HisBeginAck {
}

// 历史消息结束
message HisEndAck {
}